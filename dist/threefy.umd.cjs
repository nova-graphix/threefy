(function(b,B){typeof exports=="object"&&typeof module<"u"?B(exports,require("three"),require("react"),require("three/addons/utils/SkeletonUtils"),require("three/addons/postprocessing/EffectComposer"),require("three/addons/loaders/RGBELoader"),require("three/addons/controls/ArcballControls"),require("three/addons/controls/DragControls"),require("three/addons/controls/FirstPersonControls"),require("three/addons/controls/FlyControls"),require("three/addons/controls/MapControls"),require("three/addons/controls/OrbitControls"),require("three/addons/controls/PointerLockControls"),require("three/addons/controls/TrackballControls"),require("three/addons/controls/TransformControls"),require("three/addons/shaders/DotScreenShader"),require("three/addons/shaders/RGBShiftShader"),require("three/addons/shaders/FXAAShader"),require("three/addons/postprocessing/RenderPass"),require("three/addons/postprocessing/ShaderPass"),require("three/addons/postprocessing/GlitchPass"),require("three/addons/postprocessing/GTAOPass"),require("three/addons/postprocessing/OutlinePass"),require("three/addons/postprocessing/UnrealBloomPass"),require("three/addons/postprocessing/Pass"),require("three/addons/shaders/BokehShader2"),require("three/addons/postprocessing/OutputPass"),require("three/addons/effects/AnaglyphEffect"),require("three/addons/effects/AsciiEffect"),require("three/addons/effects/OutlineEffect"),require("three/addons/effects/ParallaxBarrierEffect"),require("three/addons/effects/PeppersGhostEffect"),require("three/addons/effects/StereoEffect"),require("three/addons/geometries/RoundedBoxGeometry"),require("three/addons/geometries/ConvexGeometry"),require("three/addons/geometries/DecalGeometry"),require("three/addons/geometries/ParametricGeometry"),require("three/addons/geometries/TextGeometry"),require("three/addons/loaders/FontLoader"),require("three/addons/curves/NURBSCurve"),require("three/addons/curves/NURBSSurface"),require("three/addons/lights/LightProbeGenerator"),require("three/addons/helpers/RectAreaLightHelper"),require("three/addons/lights/RectAreaLightUniformsLib"),require("three/addons/helpers/VertexNormalsHelper"),require("three/addons/helpers/VertexTangentsHelper"),require("three/addons/exporters/GLTFExporter"),require("three/addons/exporters/OBJExporter"),require("three/addons/exporters/PLYExporter"),require("three/addons/exporters/STLExporter"),require("three/addons/loaders/VTKLoader"),require("three/addons/loaders/MD2Loader"),require("three/addons/loaders/FBXLoader"),require("three/addons/loaders/VRMLLoader"),require("three/addons/loaders/AMFLoader"),require("three/addons/loaders/3MFLoader"),require("three/addons/loaders/ColladaLoader"),require("three/addons/loaders/PLYLoader"),require("three/addons/loaders/STLLoader"),require("three/addons/loaders/OBJLoader"),require("three/addons/loaders/MTLLoader"),require("three/addons/loaders/SVGLoader"),require("three/addons/loaders/KMZLoader"),require("three/addons/loaders/TDSLoader"),require("three/addons/loaders/GLTFLoader"),require("three/addons/loaders/KTX2Loader"),require("three/addons/loaders/DRACOLoader"),require("three/addons/libs/meshopt_decoder.module"),require("three/addons/loaders/VOXLoader"),require("three/addons/libs/fflate.module"),require("three/addons/utils/BufferGeometryUtils")):typeof define=="function"&&define.amd?define(["exports","three","react","three/addons/utils/SkeletonUtils","three/addons/postprocessing/EffectComposer","three/addons/loaders/RGBELoader","three/addons/controls/ArcballControls","three/addons/controls/DragControls","three/addons/controls/FirstPersonControls","three/addons/controls/FlyControls","three/addons/controls/MapControls","three/addons/controls/OrbitControls","three/addons/controls/PointerLockControls","three/addons/controls/TrackballControls","three/addons/controls/TransformControls","three/addons/shaders/DotScreenShader","three/addons/shaders/RGBShiftShader","three/addons/shaders/FXAAShader","three/addons/postprocessing/RenderPass","three/addons/postprocessing/ShaderPass","three/addons/postprocessing/GlitchPass","three/addons/postprocessing/GTAOPass","three/addons/postprocessing/OutlinePass","three/addons/postprocessing/UnrealBloomPass","three/addons/postprocessing/Pass","three/addons/shaders/BokehShader2","three/addons/postprocessing/OutputPass","three/addons/effects/AnaglyphEffect","three/addons/effects/AsciiEffect","three/addons/effects/OutlineEffect","three/addons/effects/ParallaxBarrierEffect","three/addons/effects/PeppersGhostEffect","three/addons/effects/StereoEffect","three/addons/geometries/RoundedBoxGeometry","three/addons/geometries/ConvexGeometry","three/addons/geometries/DecalGeometry","three/addons/geometries/ParametricGeometry","three/addons/geometries/TextGeometry","three/addons/loaders/FontLoader","three/addons/curves/NURBSCurve","three/addons/curves/NURBSSurface","three/addons/lights/LightProbeGenerator","three/addons/helpers/RectAreaLightHelper","three/addons/lights/RectAreaLightUniformsLib","three/addons/helpers/VertexNormalsHelper","three/addons/helpers/VertexTangentsHelper","three/addons/exporters/GLTFExporter","three/addons/exporters/OBJExporter","three/addons/exporters/PLYExporter","three/addons/exporters/STLExporter","three/addons/loaders/VTKLoader","three/addons/loaders/MD2Loader","three/addons/loaders/FBXLoader","three/addons/loaders/VRMLLoader","three/addons/loaders/AMFLoader","three/addons/loaders/3MFLoader","three/addons/loaders/ColladaLoader","three/addons/loaders/PLYLoader","three/addons/loaders/STLLoader","three/addons/loaders/OBJLoader","three/addons/loaders/MTLLoader","three/addons/loaders/SVGLoader","three/addons/loaders/KMZLoader","three/addons/loaders/TDSLoader","three/addons/loaders/GLTFLoader","three/addons/loaders/KTX2Loader","three/addons/loaders/DRACOLoader","three/addons/libs/meshopt_decoder.module","three/addons/loaders/VOXLoader","three/addons/libs/fflate.module","three/addons/utils/BufferGeometryUtils"],B):(b=typeof globalThis<"u"?globalThis:b||self,B(b.Threefy={},b.THREE,b.React,b.SkeletonUtils,b.EffectComposer,b.RGBELoader,b.ArcballControls,b.DragControls,b.FirstPersonControls,b.FlyControls,b.MapControls,b.OrbitControls,b.PointerLockControls,b.TrackballControls,b.TransformControls,b.DotScreenShader,b.RGBShiftShader,b.FXAAShader,b.RenderPass,b.ShaderPass,b.GlitchPass,b.GTAOPass,b.OutlinePass,b.UnrealBloomPass,b.Pass,b.BokehShader2,b.OutputPass,b.AnaglyphEffect,b.AsciiEffect,b.OutlineEffect,b.ParallaxBarrierEffect,b.PeppersGhostEffect,b.StereoEffect,b.RoundedBoxGeometry,b.ConvexGeometry,b.DecalGeometry,b.ParametricGeometry,b.TextGeometry,b.FontLoader,b.NURBSCurve,b.NURBSSurface,b.LightProbeGenerator,b.RectAreaLightHelper,b.RectAreaLightUniformsLib,b.VertexNormalsHelper,b.VertexTangentsHelper,b.GLTFExporter,b.OBJExporter,b.PLYExporter,b.STLExporter,b.VTKLoader,b.MD2Loader,b.FBXLoader,b.VRMLLoader,b.AMFLoader,b["3MFLoader"],b.ColladaLoader,b.PLYLoader,b.STLLoader,b.OBJLoader,b.MTLLoader,b.SVGLoader,b.KMZLoader,b.TDSLoader,b.GLTFLoader,b.KTX2Loader,b.DRACOLoader,b.meshopt_decoder,b.VOXLoader,b.fflate,b.BufferGeometryUtils))})(this,function(b,B,E,Ht,Ee,Pe,et,Ae,Oe,tt,rt,ke,N,_e,ie,st,nt,ot,de,it,at,ct,De,lt,Kt,dt,Ge,ue,he,fe,pe,me,ge,ye,ve,be,xe,Be,ut,Ue,Re,ht,ft,pt,mt,gt,yt,Xt,Wt,Jt,Yt,Zt,Qt,er,tr,rr,sr,nr,or,ir,ar,cr,lr,dr,ur,hr,vt,fr,bt,$e,pr){"use strict";var os=Object.defineProperty;var is=(b,B,E)=>B in b?os(b,B,{enumerable:!0,configurable:!0,writable:!0,value:E}):b[B]=E;var oe=(b,B,E)=>is(b,typeof B!="symbol"?B+"":B,E);function xt(r){const e=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(r){for(const t in r)if(t!=="default"){const s=Object.getOwnPropertyDescriptor(r,t);Object.defineProperty(e,t,s.get?s:{enumerable:!0,get:()=>r[t]})}}return e.default=r,Object.freeze(e)}const y=xt(B),wt=xt(Ht),Fe=function(r){if(!r){console.error("Animator: cannot be created without scene");return}this.mixer=new y.AnimationMixer(r),this.update=function(e){this.mixer.update(e)},this.addAnimation=function(e,t){t.length>0&&(e.animations=t)},this.createActions=function(e){const t={},s=e.animations;if(s!==void 0){for(const n of s)t[n.name]=this.mixer.clipAction(n,e),e.activeAction||(e.activeAction=t[n.name]);return t}},this.playAction=function(e,t,s){if(!e||!e.animations||e.animations.length===0)return;t=t!==void 0?t:e.animations[0],s=s||{};const n=s.duration||1,o=s.loopMode||y.LoopRepeat,i=s.repetitions||1/0,a=s.combine||"crossFade";if(a=="crossFade"){const d=e.activeAction,m=this.mixer.clipAction(t,e);return m?(m.enabled=!0,m.setLoop(o,i),d?(d.enabled=!0,d.crossFadeTo(m,n).play()):m.play(),e.activeAction=m,m):void 0}else if(a==="overlap"){const d=this.mixer.clipAction(t,e);return d.play(),e.activeAction=d,d}},this.playNextAction=function(e){if(!e)return;const t=e.animations;if(t!==void 0&&t.length>0){let s=-1;if(e.activeAction){const o=e.activeAction.getClip();s=t.indexOf(o)}s=~~((s+1)%t.length);const n=t[s];e.activeAction=this.playAction(e,n),console.log('>> playAction: "'+n.name+'"')}},this.stopAction=function(e,t){if(e&&t){const s=this.mixer.clipAction(t,e);s.enabled=!0,s.stop()}else if(e&&!t){const s=e.activeAction;s&&(s.enabled=!0,s.stop())}},this.stopAllActions=function(){this.mixer.stopAllAction()}};class je extends Kt.Pass{constructor(e,t,s){super();const n=s.width||window.innerWidth||1,o=s.height||window.innerHeight||1,i=s.vignetting||!1,a=s.shaderFocus||!1;this.scene=e,this.camera=t,this.raycaster=new B.Raycaster,this.mouse=new B.Vector2,this.width=n,this.height=o,this.distance=100;const d=dt.BokehDepthShader,m=B.UniformsUtils.clone(d.uniforms);this.materialDepth=new B.ShaderMaterial({uniforms:m,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader}),m.mNear.value=t.near,m.mFar.value=t.far,this.scene2=new B.Scene,this.camera2=new B.OrthographicCamera(n/-2,n/2,o/2,o/-2,-1e4,1e4),this.camera2.position.z=100,this.scene2.add(this.camera2),this.rtTextureDepth=new B.WebGLRenderTarget(n,o),this.rtTextureColor=new B.WebGLRenderTarget(n,o);const u={rings:3,samples:4},l=dt.BokehShader,c=B.UniformsUtils.clone(l.uniforms);c.textureWidth.value=n,c.textureHeight.value=o,c.shaderFocus.value=a,c.fstop.value=2.2,c.maxblur.value=1,c.showFocus.value=!1,c.focalDepth.value=2.8,c.manualdof.value=!1,c.vignetting.value=i,c.depthblur.value=!1,c.threshold.value=.5,c.gain.value=2,c.bias.value=.5,c.fringe.value=.7,c.focalLength.value=35,c.noise.value=!0,c.pentagon.value=!1,c.dithering.value=1e-4,c.znear.value=t.near,c.zfar.value=t.far,t.setFocalLength(c.focalLength.value),this.materialBokeh=new B.ShaderMaterial({uniforms:c,vertexShader:l.vertexShader,fragmentShader:l.fragmentShader,defines:{RINGS:u.rings,SAMPLES:u.samples}}),c.tColor.value=this.rtTextureColor.texture,c.tDepth.value=this.rtTextureDepth.texture;const h=new B.Mesh(new B.PlaneGeometry(n,o),this.materialBokeh);h.position.z=-500,this.scene2.add(h)}render(e,t,s,n,o){const i=this.scene,a=this.camera,d=this.raycaster,m=this.mouse,u=this.materialBokeh.uniforms,l=g=>{var f=a.far,p=a.near;return-f*p/(g*(f-p)-f)},c=g=>Math.max(0,Math.min(1,g)),h=(g,f,p)=>{var v=c((p-g)/(f-g));return v*v*(3-2*v)};{const g=m.x*.5+.5,f=m.y*.5+.5;u.focusCoords.value.set(g,f)}{d.setFromCamera(m,a);const g=d.intersectObjects(i.children,!0),f=g.length>0?g[0].distance:1e3;this.distance+=(f-this.distance)*.03;const p=h(a.near,a.far,this.distance),v=l(1-p);u.focalDepth.value=v}e.setRenderTarget(this.rtTextureColor),e.clear(),e.render(i,a),i.overrideMaterial=this.materialDepth,e.setRenderTarget(this.rtTextureDepth),e.clear(),e.render(i,a),i.overrideMaterial=null,this.renderToScreen?(e.setRenderTarget(null),e.render(this.scene2,this.camera2)):(e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene2,this.camera2))}}je.prototype.isBokehPass=!0,B.LOD.prototype.addLevels=function(...r){r.forEach(e=>Array.isArray(e)?this.addLevel(...e):this.addLevel(e))},N.PointerLockControls.prototype.blocker=null,N.PointerLockControls.prototype.heroPlayer={forward:!1,backward:!1,left:!1,right:!1,canJump:!1,jumpPower:350,mass:100,velocity:[0,0,0],direction:[0,0,0],viscosity:10},N.PointerLockControls.prototype.update=function(){},N.PointerLockControls.prototype.onKeyDown=function(r){const e=this.heroPlayer;switch(r.code){case"ArrowUp":case"KeyW":e.forward=!0;break;case"ArrowLeft":case"KeyA":e.left=!0;break;case"ArrowDown":case"KeyS":e.backward=!0;break;case"ArrowRight":case"KeyD":e.right=!0;break;case"Space":e.canJump===!0&&(e.velocity[1]+=e.jumpPower),e.canJump=!1;break}},N.PointerLockControls.prototype.onKeyUp=function(r){const e=this.heroPlayer;switch(r.code){case"ArrowUp":case"KeyW":e.forward=!1;break;case"ArrowLeft":case"KeyA":e.left=!1;break;case"ArrowDown":case"KeyS":e.backward=!1;break;case"ArrowRight":case"KeyD":e.right=!1;break}},N.PointerLockControls.prototype.animate=function(r,e,t){if(this.isLocked===!0){const s=this.heroPlayer,n=s.velocity,o=s.direction,i=this.getObject();t.ray.origin.copy(i.position),t.ray.origin.y-=10;const d=t.intersectObjects(e.children,!1).length>0;n[0]-=n[0]*s.viscosity*r,n[2]-=n[2]*s.viscosity*r,n[1]-=(n[1]*s.viscosity*.1+9.8*s.mass)*r,o[2]=Number(s.forward)-Number(s.backward),o[0]=Number(s.right)-Number(s.left);let m=Math.sqrt(o[0]*o[0]+o[1]*o[1]+o[2]*o[2]);m=m||1,o[0]/=m,o[1]/=m,o[2]/=m,(s.forward||s.backward)&&(n[2]-=o[2]*400*r),(s.left||s.right)&&(n[0]-=o[0]*400*r),d===!0&&(n[1]=Math.max(0,n[1]),s.canJump=!0),this.moveRight(-n[0]*r),this.moveForward(-n[2]*r),i.position.y+=n[1]*r,i.position.y<10&&(n[1]=0,i.position.y=10,s.canJump=!0)}},ie.TransformControls.prototype.onKeyDown=function(r){switch(r.key){case"q":this.setSpace(this.space==="local"?"world":"local");break;case"Shift":this.setTranslationSnap(1),this.setRotationSnap(15*Math.PI/180),this.setScaleSnap(.25);break;case"w":this.setMode("translate");break;case"e":this.setMode("rotate");break;case"r":this.setMode("scale");break;case"+":case"=":this.setSize(this.size+.1);break;case"-":case"_":this.setSize(Math.max(this.size-.1,.1));break;case"x":this.showX=!this.showX;break;case"y":this.showY=!this.showY;break;case"z":this.showZ=!this.showZ;break;case" ":this.enabled=!this.enabled;break;case"Escape":this.reset();break}},ie.TransformControls.prototype.onKeyUp=function(r){switch(r.key){case"Shift":this.setTranslationSnap(null),this.setRotationSnap(null),this.setScaleSnap(null);break}},ue.AnaglyphEffect.prototype.isAnaglyphEffect=!0,ue.AnaglyphEffect.prototype.type="AnaglyphEffect",he.AsciiEffect.prototype.isAsciiEffect=!0,he.AsciiEffect.prototype.type="AsciiEffect",fe.OutlineEffect.prototype.isOutlineEffect=!0,fe.OutlineEffect.prototype.type="OutlineEffect",pe.ParallaxBarrierEffect.prototype.isParallaxBarrierEffect=!0,pe.ParallaxBarrierEffect.prototype.type="ParallaxBarrierEffect",me.PeppersGhostEffect.prototype.isPeppersGhostEffect=!0,me.PeppersGhostEffect.prototype.type="PeppersGhostEffect",ge.StereoEffect.prototype.isStereoEffect=!0,ge.StereoEffect.prototype.type="StereoEffect",ye.RoundedBoxGeometry.prototype.isRoundedBoxGeometry=!0,ye.RoundedBoxGeometry.prototype.type="RoundedBoxGeometry",ve.ConvexGeometry.prototype.isConvexGeometry=!0,ve.ConvexGeometry.prototype.type="ConvexGeometry",be.DecalGeometry.prototype.isDecalGeometry=!0,be.DecalGeometry.prototype.type="DecalGeometry",xe.ParametricGeometry.prototype.isParametricGeometry=!0,Be.TextGeometry.prototype.isTextGeometry=!0;const re=Object.freeze(Object.defineProperty({__proto__:null,AnaglyphEffect:ue.AnaglyphEffect,ArcballControls:et.ArcballControls,AsciiEffect:he.AsciiEffect,BokehPass:je,ConvexGeometry:ve.ConvexGeometry,DecalGeometry:be.DecalGeometry,DotScreenShader:st.DotScreenShader,DragControls:Ae.DragControls,EffectComposer:Ee.EffectComposer,FXAAShader:ot.FXAAShader,FirstPersonControls:Oe.FirstPersonControls,FlyControls:tt.FlyControls,FontLoader:ut.FontLoader,GTAOPass:ct.GTAOPass,GlitchPass:at.GlitchPass,LOD:B.LOD,LightProbeGenerator:ht.LightProbeGenerator,MapControls:rt.MapControls,NURBSCurve:Ue.NURBSCurve,NURBSSurface:Re.NURBSSurface,OrbitControls:ke.OrbitControls,OutlineEffect:fe.OutlineEffect,OutlinePass:De.OutlinePass,OutputPass:Ge.OutputPass,ParallaxBarrierEffect:pe.ParallaxBarrierEffect,ParametricGeometry:xe.ParametricGeometry,PeppersGhostEffect:me.PeppersGhostEffect,PointerLockControls:N.PointerLockControls,RGBELoader:Pe.RGBELoader,RGBShiftShader:nt.RGBShiftShader,RectAreaLightHelper:ft.RectAreaLightHelper,RectAreaLightUniformsLib:pt.RectAreaLightUniformsLib,RenderPass:de.RenderPass,RoundedBoxGeometry:ye.RoundedBoxGeometry,ShaderPass:it.ShaderPass,SkeletonUtils:wt,StereoEffect:ge.StereoEffect,TextGeometry:Be.TextGeometry,TrackballControls:_e.TrackballControls,TransformControls:ie.TransformControls,UnrealBloomPass:lt.UnrealBloomPass,VertexNormalsHelper:mt.VertexNormalsHelper,VertexTangentsHelper:gt.VertexTangentsHelper},Symbol.toStringTag,{value:"Module"})),z=class z{constructor(e={}){this.width=e.width||window.innerWidth,this.height=e.height||window.innerHeight,this.widthRatio=this.width/window.innerWidth,this.heightRatio=this.height/window.innerHeight,this.dom=e.dom||document.createElement("div"),e.dom||document.body.appendChild(this.dom),this.dom.tabIndex="1",this.dom.style.width=this.width+"px",this.dom.style.height=this.height+"px",this.scene=void 0,this.camera=void 0,this.renderer=void 0,this.renderCallbacks=void 0,this.clock=void 0,this.controls=void 0,this.animator=void 0,this.composer=void 0,this.sceneHelpers=void 0,this.dragControls=void 0,this.transformControls=void 0,this.effect=void 0,this.loadingManager=z.loadingManager}init(){return this.scene=new y.Scene,this.sceneHelpers=new y.Scene,this.sceneHelpers.name="sceneHelpers",this.camera=new y.PerspectiveCamera(60,this.width/this.height,.1,5e3),this.camera.position.z=50,this.renderer=this.createRenderer(void 0),this.renderer.setSize(this.width,this.height),this.dom.appendChild(this.renderer.domElement),this.renderCallbacks=[],this.clock=new y.Clock,this.controls=new ke.OrbitControls(this.camera,this.renderer.domElement),this.controls.enableDamping=!0,this.controls.dampingFactor=.075,this.animator=new Fe(this.scene),this.raycaster=new y.Raycaster,this.selectedObject=null,this.selectedObjects=[],this.mouseDowned=!1,this.mouseDownPosition=new y.Vector2,this.mouseUpPosition=new y.Vector2,this.mouseMovePosition=new y.Vector2,this.mouseClickPosition=new y.Vector2,this.mouseDoubleClickPosition=new y.Vector2,this.createEffectComposer(),this.createBackground(),window.addEventListener("resize",()=>this.onResize(),!1),this.dom.addEventListener("click",e=>this.onClick(e),!1),this.dom.addEventListener("dblclick",e=>this.onDoubleClick(e),!1),this.dom.addEventListener("mousemove",e=>this.onMouseMove(e),!1),this.dom.addEventListener("mousedown",e=>this.onMouseDown(e),!1),this.dom.addEventListener("wheel",e=>this.onWheel(e),{passive:!0}),this.dom.addEventListener("contextmenu",e=>this.onContextMenu(e),!1),this.dom.addEventListener("pointermove",e=>this.onPointerMove(e),!1),this.dom.addEventListener("pointerdown",e=>this.onPointerDown(e),!1),this.dom.addEventListener("pointerup",e=>this.onPointerUp(e),!1),this.dom.addEventListener("keydown",e=>this.onKeyDown(e),!1),this.dom.addEventListener("keyup",e=>this.onKeyUp(e),!1),this.keyDownCallbacks=[],this.keyUpCallbacks=[],this._cache=new Map,this}dispose(e){const t=n=>{if(Array.isArray(n)){n.forEach(o=>t(o));return}Object.values(n).filter(o=>o instanceof y.Texture).forEach(o=>o.dispose()),n.uniforms&&Object.values(n.uniforms).filter(({value:o})=>o instanceof y.Texture).forEach(({value:o})=>o.dispose()),n.dispose()},s=n=>{n.geometry&&n.geometry.dispose(),n.material&&t(n.material),Object.values(n).filter(o=>o instanceof y.Texture).forEach(o=>o.dispose())};e instanceof y.BufferGeometry?e.dispose():e instanceof y.Material?t(e):e instanceof y.Texture?e.dispose():e instanceof y.Object3D&&(e.traverse&&e.traverse(n=>s(n)),s(e))}setScene(e){const t=this.scene.background;this.scene=e,this.scene.background=t,this.animator=new Fe(e),this.animator.mixer=new y.AnimationMixer(e),this.composer.passes.forEach(s=>{var n;((n=s.scene)==null?void 0:n.name)!=="sceneHelpers"?s.scene=e:s.renderScene&&(s.renderScene=e)})}setCamera(e){this.camera=e,this.controls.object=e,this.composer.passes.forEach(t=>{t.camera?t.camera=e:t.renderCamera&&(t.renderCamera=e)}),e.updateProjectionMatrix()}setEffect(e){var t,s;(s=(t=this.effect)==null?void 0:t.dispose)==null||s.call(t),this.effect=e,this.effect.setSize(this.width,this.height)}setControls(e){if(e instanceof Ae.DragControls){this._setDragControls(e);return}if(e instanceof N.PointerLockControls&&this._setPointerLockControls(e),e instanceof ie.TransformControls){this._setTransformControls(e);return}this.controls.dispose(),this.controls=e}_setDragControls(e){const t=this;this.dragControls=e,e._dummyPosition=new y.Vector3,e.addEventListener("dragstart",function(s){if(this.enabled){const n=s.object;n!==void 0&&(n.getWorldPosition(this._dummyPosition),t.controls.enabled=!1,t.select(n))}}),e.addEventListener("dragend",function(s){if(this.enabled){const n=s.object;if(n!==void 0){const o=this._dummyPosition.clone();n.getWorldPosition(this._dummyPosition);const a=this._dummyPosition.sub(o),d=a.length(),m=a.x.toFixed(2),u=a.y.toFixed(2),l=a.z.toFixed(2);console.log(`movement vector: (${m}, ${u}, ${l}), its length: ${d.toFixed(2)}`)}t.controls.enabled=!0}})}_setPointerLockControls(e){let t=e.blocker;if(!t){t=document.createElement("div"),t.id="blocker",t.innerHTML=`
                    <div id="instructions">
                        <p style="font-size:36px">
                            Click to play
                        </p>
                        <p>
                            Move: WASD<br/>
                            Jump: SPACE<br/>
                            Look: MOUSE<br/>
                            Stop: ESC
                        </p>
                    </div>
                `,document.body.appendChild(t);const s=document.createElement("style");s.innerHTML=`
                    #blocker {
                        left: 0;
                        top: 0;
                        position: absolute;
                        width: 100%;
                        height: 100%;
                        color: white;
                        background-color: rgba(0,0,0,0.5);
                    }
                    #instructions {
                        width: 100%;
                        height: 100%;
                        display: flex;
                        flex-direction: column;
                        justify-content: center;
                        align-items: center;
                        text-align: center;
                        font-size: 14px;
                        cursor: pointer;
                    }
                `,document.head.appendChild(s),e.blocker=t}t.addEventListener("click",()=>e.lock()),e.addEventListener("lock",()=>t.style.display="none"),e.addEventListener("unlock",()=>t.style.display="block"),document.addEventListener("keydown",s=>e.onKeyDown(s)),document.addEventListener("keyup",s=>e.onKeyUp(s))}_setTransformControls(e){const t=this;this.transformControls=e,this.transformControls.setSize(.5),e.addEventListener("dragging-changed",function(s){t.controls.enabled=!s.value})}list(e){const s=(n=>{let o=new Set,i=n;for(;i&&(Object.getOwnPropertyNames(i).map(a=>o.add(a)),i=Object.getPrototypeOf(i),i!==Object.prototype););return[...o.keys()]})(e);return{properties:s.filter(n=>typeof e[n]!="function"),methods:s.filter(n=>typeof e[n]=="function")}}get(e){if(arguments.length>1){const o=[];for(let i=0;i<arguments.length;i++)o.push(this.get(arguments[i]));return o}let t;const n=e.replace("[",".").replace("]","").split(".").map(o=>isNaN(o)?o:~~o).reduce((o,i)=>{if(o&&o[i])return t=o,o[i]},this);return typeof n=="function"?n.bind(t):n}set(e,t){const s=(d,m,u)=>{const l=(c,h)=>c&&(c.isColor||c.isEuler||c.isQuaternion||c.isVector2||c.isVector3||c.isVector4)?(typeof h=="number"?c.setScalar(h):c.set(...h),!0):!1;typeof d[m]=="function"?Array.isArray(u)?d[m](...u):d[m](u):l(d[m],u)||(typeof u=="string"&&Xe.includes(m)?d[m]=new y.TextureLoader().load(u,h=>h.colorSpace=y.SRGBColorSpace):d[m]=u)};if(typeof e=="object"&&t&&Object.getPrototypeOf(t)===Object.prototype){Object.keys(t).forEach(d=>{s(e,d,t[d])});return}if(Object.getPrototypeOf(e)===Object.prototype){const d=this;Object.keys(e).forEach(m=>d.set(m,e[m]));return}if(Object.getPrototypeOf(t)===Object.prototype){const d=this;Object.keys(t).forEach(m=>{const u=e+"."+m,l=t[m];d.set(u,l)});return}let n=!0;switch(e){case"scene":this.setScene(t);break;case"camera":this.setCamera(t);break;case"camera.near":case"camera.far":case"camera.fov":const d=e.split(".")[1];this.camera[d]=t,this.camera.updateProjectionMatrix();break;case"background":case"scene.background":this.createBackground(t);break;default:n=!1;break}if(n)return;const o=e.replace("[",".").replace("]","").split(".").map(d=>isNaN(d)?d:~~d),i=o.length-1;if(n=o.reduce((d,m,u)=>{if(d)return u===i?d:d[m]?d[m]:void 0},this),!n){console.warn(`${e} not found`);return}const a=o.pop();s(n,a,t)}createRenderer(e){const t=new y.WebGLRenderer({canvas:e,antialias:!0});return t.setPixelRatio(Math.min(window.devicePixelRatio,2)),t.shadowMap.enabled=!0,t.shadowMap.needsUpdate=!0,t.shadowMap.type=y.PCFSoftShadowMap,t.outputColorSpace=y.SRGBColorSpace,t.toneMapping=y.LinearToneMapping,t.toneMappingExposure=1,t}update(e,t){var s;(s=this.TWEEN)==null||s.update(),this.controls.update(t),this.animator.update(t),this.scene.traverse(n=>{!n.isLOD&&n.update&&n.update(t,e)}),this.sceneHelpers.traverse(n=>{n.update&&n.update(t,e)})}render(e,t){this.renderCallbacks.forEach(s=>s(e,this,t)),this.effect?this.effect.render(this.scene,this.camera):this.composer?this.composer.render(t):(this.renderer.render(this.scene,this.camera),this.sceneHelpers.children.length>0&&(this.renderer.autoClear=!1,this.renderer.render(this.sceneHelpers,this.camera),this.renderer.autoClear=!0))}animate(){this.animateID=window.requestAnimationFrame(this.animate.bind(this));const e=this.clock.getDelta(),t=this.clock.elapsedTime;this.update(t,e),this.render(t,e),this.controls instanceof N.PointerLockControls&&this.controls.animate(e,this.scene,this.raycaster)}replayAnimate(){this.animateID===0&&(this.animateID=window.requestAnimationFrame(this.animate.bind(this)),this.clock.oldTime=performance.now(),this.controls.enabled=!0)}pauseAnimate(e){if(this.animateID!==0){let{delayTime:t=100,controlsEnabled:s=!1}=e||{};const n=this;setTimeout(()=>{window.cancelAnimationFrame(n.animateID),n.animateID=0,n.controls.enabled=s},t)}}flushAnimate(e){if(this.animateID===0){let{delayTime:t=20}=e||{};this.replayAnimate(),this.pauseAnimate({delayTime:t})}}createEffectComposer(){if(this.composer=new Ee.EffectComposer(this.renderer),this.composer.setSize(this.width,this.height),this.composer.addPass(new de.RenderPass(this.scene,this.camera)),this.sceneHelpers){this.renderer.autoClear=!1;const e=new de.RenderPass(this.sceneHelpers,this.camera);e.clear=!1,e.clearDepth=!1,this.composer.addPass(e),this.renderer.autoClear=!0}this.composer.addPass(new Ge.OutputPass)}addPass(e){e instanceof De.OutlinePass&&(this.outlinePass=e),this.composer.insertPass(e,this.composer.passes.length-1)}createBackground(e,t){const s=this;if(e==="default.hdr"&&(e="images/hdr/death_valley_sand_dunes.hdr"),Array.isArray(e))e.length===6&&this.loadTexture(e,n=>{n.mapping=y.CubeReflectionMapping,s.scene.background=n,s.scene.environment=n,s.scene.backgroundBlurriness=0,t&&t(n)}),e.length===3&&(this.scene.background=new y.Color(...e));else if(typeof e=="string"){const n=e.split(".");n.length===1?this.scene.background=new y.Color(e):n.pop().toLowerCase()==="hdr"?this.loadTexture(e,i=>{i.mapping=y.EquirectangularReflectionMapping,s.scene.background=i,s.scene.environment=i,s.scene.backgroundBlurriness=0,t&&t(i)}):this.loadTexture(e,i=>{i.colorSpace=y.SRGBColorSpace,s.scene.background=i,t&&t(i)})}else typeof e=="number"?this.scene.background=new y.Color(e):e!=null&&e.isTexture||e!=null&&e.isColor?this.scene.background=e:this.scene.background=new y.Color(1644825)}onResize(e,t){if(this.width=e||this.widthRatio*window.innerWidth,this.height=t||this.heightRatio*window.innerHeight,e&&(this.widthRatio=e/window.innerWidth),t&&(this.heightRatio=t/window.innerHeight),this.dom.style.width=this.width+"px",this.dom.style.height=this.height+"px",this.camera.isPerspectiveCamera)this.camera.aspect=this.width/this.height;else if(this.camera.isOrthographicCamera){const s=this.camera.top-this.camera.bottom,n=this.width/this.height;this.camera.left=-s*n/2,this.camera.right=s*n/2,this.camera.top=s/2,this.camera.bottom=-s/2}this.camera.updateProjectionMatrix(),this.renderer.setSize(this.width,this.height),this.composer&&this.composer.setSize(this.width,this.height),this.effect&&this.effect.setSize(this.width,this.height),this.controls&&(this.controls instanceof Oe.FirstPersonControls||this.controls instanceof _e.TrackballControls)&&this.controls.handleResize()}getLoaded(e){const t=this._cache.get(e);return t!=null&&t[0]?t[0]:void 0}loadTexture(e,t){let s=this._cache.get(e);return s||(Array.isArray(e)&&e.length===6?s=z.cubeTexLoader.load(e,n=>{t&&t(n)}):(e.split(".").pop().toLowerCase()==="hdr"?s=z.rgbeLoader.load(e,o=>{t&&t(o)}):s=z.textureLoader.load(e,o=>{t&&t(o)}),this._cache.set(e,s))),s}getIntersects(e,t){return this.raycaster.setFromCamera(e,this.camera),this.raycaster.intersectObjects(t,!0)}getIntersectObject(e,t){if(e){let s;switch(e.type){case"click":s=this.mouseClickPosition;break;case"dblclick":s=this.mouseDoubleClickPosition;break;case"mousedown":s=this.mouseDownPosition;break;case"mouseup":s=this.mouseUpPosition;break;case"mousemove":s=this.mouseMovePosition;break;case"wheel":s=this.mouseMovePosition;break;case"contextmenu":s=this.mouseMovePosition;break;case"pointermove":s=this.mouseMovePosition;break;case"pointerdown":s=this.mouseMovePosition;break;case"pointerup":s=this.mouseMovePosition;break;default:return null}const n=this.getIntersects(s,this.scene.children);if(n.length===0)return null;{const o=n[0].object;return o.intersect={...n[0]},o}}}select(e,t,s){if(e){let n=e;if(t==="ancestor"){const o=this;e.traverseAncestors(function(i){i.parent===o.scene&&(n=i)}),this.selectedObjects=[n]}else if(t==="multiple"){const o=this.selectedObjects.indexOf(n);o===-1?this.selectedObjects.push(n):this.selectedObjects.splice(o,1)}else this.selectedObjects=[n];if(this.selectedObject=n,s){let i={click:"onClick",dblclick:"onDoubleClick",wheel:"onWheel",contextmenu:"onContextMenu",pointermove:"onPointerMove",pointerdown:"onPointerDown",pointerup:"onPointerUp"}[s.type];i&&(i=n[i],i&&i(s,n)),n.isPointerOver||(n.onPointerEnter&&n.onPointerEnter(s,n),n.onPointerOver&&n.onPointerOver(s,n),n.isPointerOver=!0)}}else{if(s){const n=this.selectedObject;n&&n.isPointerOver&&(n.onPointerLeave&&n.onPointerLeave(s,n),n.onPointerOut&&n.onPointerOut(s,n),n.isPointerOver=!1)}this.selectedObject=null,this.selectedObjects=[]}this.transformControls&&(this.selectedObject?this.transformControls.attach(this.selectedObject):this.transformControls.detach())}handleEvent(e){let t;e instanceof PointerEvent?t=this.selectedObject:t=this.getIntersectObject(e),t?t.name==="picker"?this.select(t.userData.object,"picker",e):e.ctrlKey?this.select(t,"multiple",e):e.altKey?this.select(t,"ancestor",e):this.select(t,"itsef",e):this.select(null,"null",e)}onClick(e){this.dom.focus(),this.onMouseDown(e),this.onMouseUp(e)}onDoubleClick(e){e.preventDefault(),this.mouseDoubleClickPosition.fromArray(this.getMousePosition(e)),this.handleEvent(e)}getMousePosition(e){const t=this.dom.getBoundingClientRect();let s,n;return e.changedTouches?(s=e.changedTouches[0].clientX,n=e.changedTouches[0].clientY):(s=e.clientX,n=e.clientY),s=(s-t.left)/t.width*2-1,n=-((n-t.top)/t.height)*2+1,[s,n]}onMouseMove(e){if(e.preventDefault(),this.mouseMovePosition.fromArray(this.getMousePosition(e)),this.handleEvent(e),this.outlinePass){const t=this.selectedObject;this.outlinePass.selectedObjects=t?[t]:[]}}onMouseDown(e){this.mouseDowned=!0,e.preventDefault(),this.mouseDownPosition.fromArray(this.getMousePosition(e)),document.addEventListener("mouseup",t=>this.onMouseUp(t),!1)}onMouseUp(e){this.mouseDowned&&(this.mouseDowned=!1,e.preventDefault(),this.mouseUpPosition.fromArray(this.getMousePosition(e)),this.handleEvent(e),document.removeEventListener("mouseup",t=>this.onMouseUp(t),!1))}onWheel(e){this.handleEvent(e)}onContextMenu(e){e.preventDefault(),this.handleEvent(e)}onPointerMove(e){e.preventDefault(),this.handleEvent(e)}onPointerDown(e){e.preventDefault(),this.handleEvent(e)}onPointerUp(e){e.preventDefault(),this.handleEvent(e)}onKeyDown(e){if(this.keyDownCallbacks.length>0){this.keyDownCallbacks.forEach(s=>s(e,this));return}if(this.controls instanceof N.PointerLockControls){this.controls.onKeyDown(e);return}if(this.transformControls){this.transformControls.onKeyDown(e);return}e.stopPropagation();const t=e.ctrlKey;if(!(t&&e.keyCode===90)&&!(t&&e.keyCode===89))switch(e.keyCode){case 8:e.preventDefault();case 27:this.controls.enabled=!0;break;case 46:break;case 49:break;case 50:break;case 66:break;case 68:mr(this);break;case 79:if(this.animator&&this.selectedObject){const s=this.selectedObject.activeAction;s&&(s.paused=!s.paused)}break;case 80:this.animator&&this.selectedObject&&this.animator.playNextAction(this.selectedObject);break}}onKeyUp(e){if(this.keyUpCallbacks.length>0){this.keyUpCallbacks.forEach(t=>t(e,this));return}if(this.controls instanceof N.PointerLockControls){this.controls.onKeyUp(e);return}if(this.transformControls){this.transformControls.onKeyUp(e);return}switch(e.preventDefault(),e.stopPropagation(),e.keyCode){case 17:this.controls.enabled=!0;break}}};oe(z,"loadingManager",new y.LoadingManager),oe(z,"textureLoader",new y.TextureLoader(z.loadingManager)),oe(z,"cubeTexLoader",new y.CubeTextureLoader(z.loadingManager)),oe(z,"rgbeLoader",new Pe.RGBELoader(z.loadingManager)),oe(z,"audioLoader",new y.AudioLoader(z.loadingManager));let Ie=z;const mr=r=>{console.log(r.scene)},Mt={__vertexMain__:`
varying float vInstanceId;
vec2 getMergedUv( in vec2 uv, in vec4 uvRange ) {
    vec2 _uv = mod( uv, vec2(1.0) );
    float offset = 0.5 / float(512); // assume: TEXTURE_SIZE = 512
    float startU = uvRange.x + offset;
    float startV = uvRange.y - offset;
    float endU = uvRange.z - offset;
    float endV = uvRange.w + offset;
    _uv.x = _uv.x * (endU - startU) + startU;
    _uv.y = _uv.y * (startV - endV) + endV;
    return _uv;
}
#define vDisplacementMapUv    getMergedUv( vDisplacementMapUv, uvRange )
void main() {
    // add 0.5 to the value to avoid floating error that may cause flickering
    vInstanceId = getIndirectIndex(gl_DrawID) + 0.5;
`,__fragmentMain__:`
uniform highp sampler2D dataTexture;
varying float vInstanceId;
vec2 getMergedUv( in vec2 uv, in vec4 uvRange ) {
    vec2 _uv = mod( uv, vec2(1.0) );
    float offset = 0.5 / float(512); // assume: TEXTURE_SIZE = 512
    float startU = uvRange.x + offset;
    float startV = uvRange.y - offset;
    float endU = uvRange.z - offset;
    float endV = uvRange.w + offset;
    _uv.x = _uv.x * (endU - startU) + startU;
    _uv.y = _uv.y * (startV - endV) + endV;
    return _uv;
}
#define vUv                        getMergedUv( vUv, uvRange )
#define vDisplacementMapUv         getMergedUv( vDisplacementMapUv, uvRange )
#define vAlphaMapUv                getMergedUv( vAlphaMapUv, uvRange )
#define vAoMapUv                   getMergedUv( vAoMapUv, uvRange )
#define vEmissiveMapUv             getMergedUv( vEmissiveMapUv, uvRange )
#define vLightMapUv                getMergedUv( vLightMapUv, uvRange )
#define vMapUv                     getMergedUv( vMapUv, uvRange )
#define vMetalnessMapUv            getMergedUv( vMetalnessMapUv, uvRange )
#define vNormalMapUv               getMergedUv( vNormalMapUv, uvRange )
#define vBumpMapUv                 getMergedUv( vBumpMapUv, uvRange )
#define vRoughnessMapUv            getMergedUv( vRoughnessMapUv, uvRange )
#define vTransmissionMapUv         getMergedUv( vTransmissionMapUv, uvRange )
#define vSpecularMapUv             getMergedUv( vSpecularMapUv, uvRange )
#define vAnisotropyMapUv           getMergedUv( vAnisotropyMapUv, uvRange )
#define vClearcoatMapUv            getMergedUv( vClearcoatMapUv, uvRange )
#define vClearcoatNormalMapUv      getMergedUv( vClearcoatNormalMapUv, uvRange )
#define vClearcoatRoughnessMapUv   getMergedUv( vClearcoatRoughnessMapUv, uvRange )
#define vIridescenceMapUv          getMergedUv( vIridescenceMapUv, uvRange )
#define vIridescenceThicknessMapUv getMergedUv( vIridescenceThicknessMapUv, uvRange )
#define vSheenColorMapUv           getMergedUv( vSheenColorMapUv, uvRange )
#define vSheenRoughnessMapUv       getMergedUv( vSheenRoughnessMapUv, uvRange )
#define vSpecularColorMapUv        getMergedUv( vSpecularColorMapUv, uvRange )
#define vSpecularIntensityMapUv    getMergedUv( vSpecularIntensityMapUv, uvRange )
#define vThicknessMapUv            getMergedUv( vThicknessMapUv, uvRange )
void main() {
`},Lt={uvRange:"vec4",diffuse:"vec3",opacity:"float",color:"vec3",emissive:"vec3",specular:"vec3",shininess:"float",metalness:"float",roughness:"float",ior:"float",specularIntensity:"float",specularColor:"vec3",clearcoat:"float",clearcoatRoughness:"float",dispersion:"float",iridescence:"float",iridescenceIOR:"float",iridescenceThicknessMinimum:"float",iridescenceThicknessMaximum:"float",sheenColor:"vec3",sheenRoughness:"float",anisotropyVector:"vec2"},Ve=r=>{if(!r)return;const{threefy:e}=q();return Object.keys(r).filter(t=>t.match(/(map|matcap|Map)$/)).forEach(t=>{typeof r[t]=="string"&&(r[t]=e.loadTexture(r[t]))}),r},gr=r=>{if(!r)return;const{threefy:e}=q();return Object.keys(r).forEach(t=>{const s=r[t].value;typeof s=="string"?r[t].value=e.loadTexture(s):Array.isArray(s)&&s.length>0&&s.forEach((n,o)=>{typeof n=="string"&&(r[t].value[o]=e.loadTexture(n))})}),r},yr=r=>{const e=/(attach|castShadow|receiveShadow|position|rotation|scale)/;return Object.keys(r).forEach(t=>{e.test(t)&&delete r[t]}),r};function vr(r){let e=parseFloat(r.replace(/[^1-4]/g,""))||1,t;switch(e){case 1:t="r";break;case 2:t="rg";break;case 3:t="rgb";break;case 4:t="rgba";break}return{type:r,dim:e,comp:t}}class Ct extends y.DataTexture{constructor(e,t){const s=Object.entries(e).map(([c,h])=>({name:c,...vr(h)})),n=s.length;let o=Math.sqrt(t*n);o=Math.ceil(o/n)*n,o=Math.max(o,n);const i={};for(let c=0,h=s.length;c<h;c++)i[s[c].name]=c;const a=[1,1,1,1],d=[1,1,1,1],m=[1,1,1,1],u=[...a,...d,...m],l=new Float32Array(o*o*4);for(let c=0;c<t;c++)l.set(u,c*n*4);super(l,o,o,y.RGBAFormat,y.FloatType),this.fields=s,this.fieldToIndex=i}setValue(e,t,...s){const{fields:n,fieldToIndex:o,image:i}=this,a=n.length;if(!(t in o))return;const d=o[t],u=n[d].dim,l=i.data,c=(e*a+d)*4;u===3&&s.length===1&&(s=new y.Color(s[0]).toArray());for(let h=0;h<u;h++)l[c+h]=s[h]||0;this.needsUpdate=!0}getGlsl(e="vInstanceId",t="dataTexture",s=""){const{fields:n,image:o}=this,i=o.width,a=n.length;let d=`${s}int size = ${i};
${s}int j = int( ${e} ) * ${a};
${s}int x = j % size;
${s}int y = j / size;
`;for(let m=0,u=n.length;m<u;m++){const{name:l,type:c,comp:h}=n[m];d+=`${s}${c} ${l} = ${c}( texelFetch( ${t}, ivec2( x + ${m}, y ), 0 ).${h} );
`}return d}}class St extends y.MeshPhysicalMaterial{constructor(e,t){Ve(t),super(t),this.isBatchedMaterial=!0;const s={...Lt};delete s.uvRange,this.props=s;const n=new Ct(s,e);this.dataTexture=n,this.onBeforeCompile=(o,i)=>{Object.keys(s).length!==0&&(o.uniforms.dataTexture={value:n},o.vertexShader=o.vertexShader.replace("void main() {",`
                varying float vInstanceId;
                void main() {
                    // add 0.5 to the value to avoid floating error that may cause flickering
                    vInstanceId = getIndirectIndex(gl_DrawID) + 0.5;
                `),o.fragmentShader=o.fragmentShader.replace("void main() {",`
                uniform highp sampler2D dataTexture;
                varying float vInstanceId;
                void main() {
                    ${n.getGlsl()}
                `))}}setValue(...e){this.props[e[1]]&&this.dataTexture.setValue(...e)}dispose(){super.dispose(),this.dataTexture.dispose()}}class ze extends y.MeshPhysicalMaterial{constructor(e,t){Ve(t),super(t),this.isMergedMaterial=!0;const s={...Lt};this.props=s;const n=new Ct(s,e);this.dataTexture=n,this.onBeforeCompile=(o,i)=>{Object.keys(s).length!==0&&(o.uniforms.dataTexture={value:n},o.vertexShader=o.vertexShader.replace("void main() {",Mt.__vertexMain__),o.fragmentShader=o.fragmentShader.replace("void main() {",Mt.__fragmentMain__+`${n.getGlsl()}`))}}setValue(...e){this.props[e[1]]&&this.dataTexture.setValue(...e)}dispose(){super.dispose(),this.dataTexture.dispose()}}let br=0;const xr=Date.now(),Tt=new WeakMap,Et=/\bvoid\s+main\s*\(\s*\)\s*{/g;function Ne(r){const e=/^[ \t]*#include +<([\w\d./]+)>/gm;function t(s,n){let o=y.ShaderChunk[n];return o?Ne(o):s}return r.replace(e,t)}const ae=Object.assign||function(){let r=arguments[0];for(let e=1,t=arguments.length;e<t;e++){let s=arguments[e];if(s)for(let n in s)s.hasOwnProperty(n)&&(r[n]=s[n])}return r};function wr(r){return JSON.stringify(r,(e,t)=>e==="uniforms"?void 0:t)}function Mr({vertexShader:r,fragmentShader:e},t,s){let{vertexDefs:n,vertexTransform:o,vertexMainIntro:i,fragmentDefs:a,fragmentDiffuseTransform:d,fragmentMainIntro:m,fragmentColorTransform:u,timeUniform:l}=t;if(l){const c=`
uniform float ${l};
`;n=(n||"")+c,a=(a||"")+c}return(n||o||i)&&(o&&(r=Ne(r),n=`
                ${n||""}
                void vertexTransform_${s}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
                    ${o}
                }`,r=r.replace(/\b(position|normal|uv)\b/g,(c,h,g,f)=>/\battribute\s+vec3\s+$/.test(f.substr(0,g))?h:`_${h}_${s}`),i=`
                vec3 _position_${s} = vec3(position);
                vec3 _normal_${s} = vec3(normal);
                vec2 _uv_${s} = vec2(uv);
                vertexTransform_${s}(_position_${s}, _normal_${s}, _uv_${s});
                ${i||""}`),r=r.replace(Et,`${n||""}

$&

${i||""}`)),(a||d||m||u)&&(e=Ne(e),d&&(a=`
                ${a||""}
                void fragmentDiffuseTransform_${s}(inout vec3 diffuse) {
                    ${d}
                }`,e=e.replace(/\b(diffuse)\b/g,(c,h,g,f)=>/\buniform\s+vec3\s+$/.test(f.substr(0,g))?h:`_${h}_${s}`),m=`
                vec3 _diffuse_${s} = diffuse;
                fragmentDiffuseTransform_${s}(_diffuse_${s});
                ${m||""}`),e=e.replace(Et,`
            ${a||""}
            void threejsMain_${s}() {
            ${m||""}`),e+=`
            void main() {
                threejsMain_${s}();
                ${u||""}
            }`),{vertexShader:r,fragmentShader:e}}const qe=function(r,e){const t=wr(e);let s=Tt.get(r);if(s||(s=Object.create(null),Tt.set(r,s)),s[t])return s[t].clone();const n=++br,o=`_derivedShaders${n}`,i=`_onBeforeCompile${n}`;let a,d;function m(c){r.onBeforeCompile.call(this,c);const{vertex:h,fragment:g}=this[o]||(this[o]={vertex:{},fragment:{}});if(h.source!==c.vertexShader||g.source!==c.fragmentShader){const f=Mr(c,e,n);h.source=c.vertexShader,h.result=f.vertexShader,g.source=c.fragmentShader,g.result=f.fragmentShader}c.vertexShader=h.result,c.fragmentShader=g.result,ae(c.uniforms,this.uniforms),e.timeUniform&&(c.uniforms[e.timeUniform]={get value(){return Date.now()-xr}}),this[i]&&this[i](c)}function u(){this._listeners=void 0}u.prototype=Object.create(r,{constructor:{value:u},isDerivedMaterial:{value:!0},baseMaterial:{value:r},onBeforeCompile:{get(){return m},set(c){this[i]=c}},copy:{value:function(c){return r.copy.call(this,c),!r.isShaderMaterial&&!r.isDerivedMaterial&&(this.extensions=c.extensions,this.defines=ae({},c.defines),this.uniforms=y.UniformsUtils.clone(c.uniforms)),this}},getDepthMaterial:{value:function(){let c=this._depthMaterial;return c||(d||(d=qe(r.isDerivedMaterial?r.getDepthMaterial():new y.MeshDepthMaterial({depthPacking:RGBADepthPacking}),e),d.defines.IS_DEPTH_MATERIAL=""),c=this._depthMaterial=d.clone()),c}},getDistanceMaterial:{value:function(){let c=this._distanceMaterial;return c||(a||(a=qe(r.isDerivedMaterial?r.getDistanceMaterial():new y.MeshDistanceMaterial,e),a.defines.IS_DISTANCE_MATERIAL=""),c=this._distanceMaterial=a.clone()),c}},dispose:{value(){const{_depthMaterial:c,_distanceMaterial:h}=this;c&&c.dispose(),h&&h.dispose(),r.dispose.call(this)}}});const l=new u;return l.copy(r),l.uniforms=ae(y.UniformsUtils.clone(r.uniforms||{}),e.uniforms),l.defines=ae({},r.defines,e.defines),l.defines.DERIVED_MATERIAL=n,l.extensions=ae({},r.extensions,e.extensions),s[t]=l,l.clone()};class He{constructor(e="basic",t={}){const{extensions:s,defines:n,uniforms:o,vdeclare:i,vvertex:a,vmain:d,fdeclare:m,fdiffuse:u,fmain:l,fcolor:c,...h}=t;let g=We[e];g||(g="MeshBasicMaterial");const f=Ve(yr(h)),p=new y[g](f),v=gr(o),x={extensions:s,defines:n,uniforms:v,vertexDefs:i,vertexTransform:a,vertexMainIntro:d,fragmentDefs:m,fragmentDiffuseTransform:u,fragmentMainIntro:l,fragmentColorTransform:c};return this.isCustomMaterial=!0,this.type="CustomMaterial",this.subType=g,qe(p,x)}}const Pt=Object.freeze(Object.defineProperty({__proto__:null,BatchedMaterial:St,CustomMaterial:He,MergedMaterial:ze},Symbol.toStringTag,{value:"Module"})),At=r=>{if(r.isColor)return r;const e=typeof r;if(e==="number"||e==="string")return new y.Color(r);if(Array.isArray(r))return new y.Color(...r)},Lr=r=>{if(r.isVector3)return r;const e=typeof r;return Array.isArray(r)?new y.Vector3(...r):e==="number"?new y.Vector3().setScalar(r):e==="string"?new y.Vector3().setScalar(~~r):e==="object"?new y.Vector3(r.x,r.y,r.z):void 0},we=r=>{if(Array.isArray(r[0]))return r.map(e=>new y.Vector2(...e));if(typeof r[0]=="number"){const e=[];for(let t=0,s=r.length;t<s;t+=2)e.push(new y.Vector2(r[t],r[t+1]));return e}else return typeof r[0]=="object"?r.map(e=>new y.Vector2(e.x,e.y)):r},se=r=>{if(Array.isArray(r[0]))return r.map(e=>new y.Vector3(...e));if(typeof r[0]=="number"){const e=[];for(let t=0,s=r.length;t<s;t+=3)e.push(new y.Vector3(r[t],r[t+1],r[t+2]));return e}else return typeof r[0]=="object"?r.map(e=>new y.Vector3(e.x,e.y,e.z)):r},Ot=r=>{if(Array.isArray(r[0]))return r.map(e=>new y.Vector4(...e));if(typeof r[0]=="number"){const e=[];for(let t=0,s=r.length;t<s;t+=4)e.push(new y.Vector4(r[t],r[t+1],r[t+2],r[t+3]));return e}else return typeof r[0]=="object"?r.map(e=>new y.Vector4(e.x,e.y,e.z,e.w)):r},Ke=["color","blendColor","emissive","specular","sheenColor","attenuationColor","specularColor"],Xe=["alphaMap","anisotropyMap","aoMap","bumpMap","clearcoatMap","clearcoatNormalMap","clearcoatRoughnessMap","displacementMap","emissiveMap","envMap","gradientMap","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalnessMap","normalMap","roughnessMap","sheenColorMap","sheenRoughnessMap","specularColorMap","specularIntensityMap","specularMap","thicknessMap","transmissionMap"],We={line:"LineBasicMaterial",dashed:"LineDashedMaterial",basic:"MeshBasicMaterial",depth:"MeshDepthMaterial",distance:"MeshDistanceMaterial",lambert:"MeshLambertMaterial",matcap:"MeshMatcapMaterial",normal:"MeshNormalMaterial",phong:"MeshPhongMaterial",physical:"MeshPhysicalMaterial",standard:"MeshStandardMaterial",toon:"MeshToonMaterial",points:"PointsMaterial",rawShader:"RawShaderMaterial",shader:"ShaderMaterial",shadow:"ShadowMaterial",sprite:"SpriteMaterial"},Me={buffer:"BufferGeometry",instancedBuffer:"InstancedBufferGeometry",box:"BoxGeometry",capsule:"CapsuleGeometry",circle:"CircleGeometry",cone:"ConeGeometry",cylinder:"CylinderGeometry",dodecahedron:"DodecahedronGeometry",extrude:"ExtrudeGeometry",icosahedron:"IcosahedronGeometry",lathe:"LatheGeometry",octahedron:"OctahedronGeometry",plane:"PlaneGeometry",polyhedron:"PolyhedronGeometry",ring:"RingGeometry",shape:"ShapeGeometry",sphere:"SphereGeometry",tetrahedron:"TetrahedronGeometry",torus:"TorusGeometry",torusKnot:"TorusKnotGeometry",tube:"TubeGeometry",edges:"EdgesGeometry",wireframe:"WireframeGeometry",rounded:"RoundedBoxGeometry",convex:"ConvexGeometry",decal:"DecalGeometry",parametric:"ParametricGeometry",text:"TextGeometry"};let O=null;const Cr=E.createContext(),Sr=r=>{if(!r)return;const{threefy:e}=q();return Object.keys(r).forEach(t=>{const s=r[t].value;typeof s=="string"?r[t].value=e.loadTexture(s):Array.isArray(s)&&s.length>0&&s.forEach((n,o)=>{typeof n=="string"&&(r[t].value[o]=e.loadTexture(n))})}),r},ce=(r,e,t)=>{const s=e.split("-"),n=s.length;s.reduce((o,i,a)=>{if(a===n-1)return Array.isArray(o)?o:(Array.isArray(t)&&typeof t[0]=="number"?o[i]&&typeof o[i]!="function"&&o[i].fromArray(t):o[i]&&o[i].copy&&t&&(t.isVector2||t.isVector3||t.isVector4||t.isColor||t.isMatrix3||t.isMatrix4)?o[i].copy(t):o[i]=t,o[i]);if(a===n-2){let d=s[a+1];return d=Number(d),!isNaN(d)&&!Array.isArray(o[i])&&(o[i]=[]),isNaN(d)?o[i]||(o[i]={}):o[i][d]=t,o[i]}else o[i]||(o[i]={});return o[i]},r)},W=(r,e)=>{e&&Object.keys(e).forEach(t=>{var i;if(t==="attach"||r.isMaterial&&/position|rotation|scale/.test(t)||![t in r,t==="update",/-/.test(t),/^on/.test(t)].some(Boolean))return;const n=e[t],o=typeof n;if(n!=null&&!(r.isBufferGeometry&&t==="scale")){if(typeof r[t]=="function"&&o!=="function"){const a=Array.isArray(n)?n:[n];r[t](...a);return}if(o==="object")n.isObject3D||(r.isBatchedMesh&&/geometry/.test(t)?r.addGeometry(n):r.isShaderMaterial&&t==="uniforms"?ce(r,t,Sr(n)):ce(r,t,n)),r.isMaterial&&n.isTexture&&(r.needsUpdate=!0);else if(o==="function")r[t]=n,r[t].bind(r);else if(o==="number"){if(t==="scale"){(i=r[t])!=null&&i.isVector3&&r[t].fromArray([n,n,n]);return}if(Ke.includes(t)){r[t]=new y.Color(n);return}const a=t.split("-");if(Ke.includes(a[0])&&"r g b".includes(a[1])){r[a[0]][a[1]]=n;return}if("position rotation scale".includes(a[0])&&"x y z".includes(a[1])){r.isObject3D&&(r[a[0]][a[1]]=n);return}ce(r,t,n)}else o==="string"?Ke.includes(t)?r[t]=new y.Color(n):Xe.includes(t)?(r[t]=O.loadTexture(n),t==="map"||t==="emissiveMap"?r[t].colorSpace=y.SRGBColorSpace:t==="envMap"||t==="lightMap"?r[t].colorSpace=y.LinearSRGBColorSpace:r[t].colorSpace=y.NoColorSpace,r.needsUpdate=!0):ce(r,t,n):o==="boolean"?r[t]=n:ce(r,t,n)}})},Le=r=>{if(r)if(typeof r.type=="function"){const e=r.type(r.props);return Le(e)}else if(typeof r.type=="symbol"){const e=Symbol.keyFor(r.type);if(e==="react.fragment")return E.createElement("group",null,r.props.children);if(e==="react.suspense"){const t=r.props;return E.createElement("group",{fallback:t.fallback},t.fallback,t.children)}else return console.warn(`warning: ${e} not supported`,r),null}else return typeof r.type=="object"?typeof r.type.$$typeof=="symbol"&&Symbol.keyFor(r.type.$$typeof)==="react.forward_ref"?Le(r.type.render(r.props,r.ref)):(console.warn("warning: unexpected cases occurred",r),null):r},Je=(r,e,t,s)=>{const n={refs:[],elms:[]},o={refs:[],elms:[]};E.useEffect(()=>{const u=g=>{let f=g.map(p=>p.current);return f=f.flat(1/0),f=f.filter(p=>p!=null),f},l=(g,f)=>{f[g.attach]=g.current},c={};n.refs.forEach(g=>l(g,c));const h=s(r,c);if(o.refs.length>0){const g=u(o.refs),f=[];g.forEach(p=>{var v,x;if(p)if(p.isScene)O.setScene(p);else if(p.isCamera)O.setCamera(p);else if((v=p.type)!=null&&v.match(/(Helper)$/)||p.isTransformControls)O.sceneHelpers.add(p);else if(p.isFog||p.isFogExp2)O.scene.fog=p;else if(p.isPass)O.addPass(p);else if((x=p.type)!=null&&x.match(/(Effect)$/))O.setEffect(p);else if(p.type==="Group"&&p.forCurvePath){const w=p,L=new y.CurvePath;w.children.forEach(C=>{L.add(C.userData.curve)}),w.userData.path=L,f.push(p)}else f.push(p)}),f.forEach(p=>{p.isObject3D&&h.add(p)})}if(e){let g;/Geometry/i.test(t)&&(g="geometry"),/Material/i.test(t)&&(g="material"),e.current=h,e.attach=r.attach?r.attach:g}},[n.refs,o.refs,e]);const{children:i}=r;let a=Array.isArray(i)?i:[i];a=a.flat(1/0);const d=E.useId(),m=O.reactElements;for(let u=0;u<a.length;u++){if(!a[u])continue;let l=Le(a[u]);if(!l)continue;typeof l.type=="symbol"&&(l=Le(l));const c=`${d}-${l.type}-${u}`,h=l.ref?l.ref:E.useRef(null),g=m[l.type];let f=!1;/Geometry/i.test(l.type)&&(f=!0),/Material/i.test(l.type)&&(f=!0),l.props.attach||f?(n.refs.push(h),n.elms.push(E.createElement(g,{ref:h,key:c,...l.props}))):(o.refs.push(h),o.elms.push(E.createElement(g,{ref:h,key:c,...l.props})))}return[n.elms,o.elms].flat()};function Tr(r,e){switch(e.type){case"myAction":return r;default:return r}}function Er(r){O||(O=new Ie,O.init(),O.animate(),O.reactElements={},["Color","Vector2","Vector3","Vector4","Scene","Object3D","Group","Sprite","Line","LineLoop","LineSegments","Points","Audio","PositionalAudio","LOD","Fog","FogExp2","AmbientLight","DirectionalLight","HemisphereLight","Light","LightProbe","PointLight","RectAreaLight","SpotLight","ArrayCamera","Camera","CubeCamera","OrthographicCamera","PerspectiveCamera","StereoCamera","BufferAttribute","GLBufferAttribute","InstancedBufferAttribute","InstancedInterleavedBuffer","InterleavedBuffer","InterleavedBufferAttribute","BufferGeometry","InstancedBufferGeometry","BoxGeometry","CapsuleGeometry","CircleGeometry","ConeGeometry","CylinderGeometry","DodecahedronGeometry","EdgesGeometry","ExtrudeGeometry","IcosahedronGeometry","LatheGeometry","OctahedronGeometry","PlaneGeometry","PolyhedronGeometry","RingGeometry","ShapeGeometry","SphereGeometry","TetrahedronGeometry","TorusGeometry","TorusKnotGeometry","TubeGeometry","WireframeGeometry","LineBasicMaterial","LineDashedMaterial","MeshBasicMaterial","MeshDepthMaterial","MeshDistanceMaterial","MeshLambertMaterial","MeshMatcapMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MeshToonMaterial","PointsMaterial","RawShaderMaterial","ShaderMaterial","ShadowMaterial","SpriteMaterial","BatchedMesh","InstancedMesh","Mesh","SkinnedMesh","CanvasTexture","CompressedTexture","CompressedArrayTexture","CubeTexture","Data3DTexture","DataArrayTexture","DataTexture","DepthTexture","FramebufferTexture","Texture","VideoTexture","ArrowHelper","AxesHelper","BoxHelper","Box3Helper","CameraHelper","DirectionalLightHelper","GridHelper","PolarGridHelper","HemisphereLightHelper","PlaneHelper","PointLightHelper","SkeletonHelper","SpotLightHelper","Controls","ArcballControls","DragControls","FirstPersonControls","FlyControls","MapControls","OrbitControls","PointerLockControls","TrackballControls","TransformControls","RenderPass","ShaderPass","GlitchPass","GTAOPass","OutlinePass","UnrealBloomPass","BokehPass","OutputPass","AnaglyphEffect","AsciiEffect","OutlineEffect","ParallaxBarrierEffect","PeppersGhostEffect","StereoEffect","RoundedBoxGeometry","ConvexGeometry","DecalGeometry","ParametricGeometry","TextGeometry","Primitive","Geometry","Material","BatchedMaterial","CustomMaterial","CurvePath"].forEach(a=>Ur(a)),Rr(),$r());const[e,t]=E.useReducer(Tr,O),s=E.useMemo(()=>({threefy:e,dispatch:t}),[e]),o=Je(r,null,"ThreeProvider",(i,a)=>O.scene);return E.createElement(Cr.Provider,{value:s},o.length>0&&o)}function Pr(r){return Er(r)}function q(r){if(r===void 0){const e=O;return{threefy:e,scene:e.scene,camera:e.camera,renderer:e.renderer,clock:e.clock,controls:e.controls,animator:e.animator,raycaster:e.raycaster,canvas:e.renderer.domElement,list:e.list,get:e.get.bind(e),set:e.set.bind(e)}}else return r(O)}function Ar(r,e=[]){const t=E.useRef(null);return E.useEffect(()=>{t.current&&r(t.current,O.scene)},[...e]),t}function Or(r,e=[]){const t=E.useRef(r);return E.useEffect(()=>{t.current=r},[r,...e]),E.useCallback((...s)=>{const n=t.current;return n(...s)},[t])}function kr(r){O.renderCallbacks.push(r)}function _r(r){O.keyDownCallbacks.push(r)}function Dr(r){O.keyUpCallbacks.push(r)}const Ye=(r,e,t)=>{const s=(o,i,a,d)=>{const m="is"+i;(Array.isArray(o)?o:[o]).forEach(l=>{(l[m]===!0||l.type===i)&&(a?a===l.name&&d.push(l):d.push(l)),Object.keys(l).forEach(c=>{const h=l[c];c!=="parent"&&typeof h=="object"&&h!==null&&s(h,i,a,d)})})},n=[];return s(r,e,t,n),n},Gr=(r,e)=>{const t=O.scene;if(e===void 0)return Ye(t,r);let s=Array.isArray(e)?e:[e];if(r==="Object3D"){const i=a=>a.split("/").pop();s=s.map(a=>i(a))}const n=Ye(t,r),o=[];return s.forEach(i=>{o.push(n.filter(a=>a.name===i))}),o.length===1?o[0]:o},Br=()=>{const r=O;return{replay:()=>r.replayAnimate(),pause:()=>r.pauseAnimate(),flush:()=>r.flushAnimate()}},Ur=r=>{const e=E.forwardRef((s,n)=>{const i=Je(s,n,r,(a,d)=>{const{children:m,args:u,type:l,count:c,object:h,onLoad:g,fallback:f,...p}=a;let v=Array.isArray(u)?u:[];r==="InstancedMesh"&&c&&v.push(void 0,void 0,c);let x;if(r==="Primitive"){if(!h)throw new Error("create3DElement(): Primitives without 'object' are invalid!");if(g){const w=({target:L})=>{L.removeEventListener("onLoad",w),g(L)};h.addEventListener("onLoad",w)}x=h}else if(r==="Geometry"){if(n.current&&n.current.dispose(),l.match(/(rounded|convex|decal|parametric|text)/))n.current=new re[Me[l]](...v);else{const w=l===void 0?"buffer":l;n.current=new y[Me[w]](...v)}x=n.current}else if(r==="Material"){const w=l===void 0?"basic":l;x=n.current?n.current:new y[We[w]]}else if(r==="BatchedMaterial")x=n.current?n.current:new Pt[r](...v);else if(r==="CustomMaterial")x=n.current?n.current:new Pt[r](l,p);else if(r==="Controls"){const w=(P,T)=>{const _=O.camera,D=O.renderer,j=O.scene;switch(T.length=0,P){case"arcball":T.push(_,D.domElement,j);break;case"drag":T.push(j.children,_,D.domElement);break;case"pointerLock":T.push(_,document.body);break;case"firstPerson":case"fly":case"map":case"orbit":case"trackball":case"transform":T.push(_,D.domElement);break}},L=(P,T)=>{const{movementSpeed:_=10,lookSpeed:D=.05,rollSpeed:j=.2,enableDamping:H=!0,dampingFactor:Z=.075,rotateSpeed:Y=5}=a;switch(P){case"firstPerson":T.movementSpeed=_,T.lookSpeed=D;break;case"fly":T.movementSpeed=_,T.rollSpeed=j;break;case"map":T.enableDamping=H;break;case"orbit":T.enableDamping=!0,T.dampingFactor=Z;break;case"trackball":T.rotateSpeed=Y;break}};v.length===0&&w(l,v),L(l,p);const C=l[0].toUpperCase()+l.slice(1)+"Controls";x=n.current?n.current:new re[C](...v),O.setControls(x)}else r.match(/(Controls)$/)?(x=n.current?n.current:new re[r](...v),O.setControls(x)):r.match(/(Pass)$/)?x=n.current?n.current:new re[r](...v):r.match(/(Effect)$/)?x=n.current?n.current:new re[r](...v):r.match(/(Geometry)$/)?(n.current&&n.current.dispose(),n.current=new y[r](...v),x=n.current):r==="CurvePath"?(x=n.current?n.current:new y.Group(...v),x.forCurvePath=!0):x=n.current?n.current:new y[r](...v);if(W(x,d),W(x,p),r==="Group"&&f){const w=m.flat(1).map(P=>P.props.url!==void 0),L=[],C=({target:P})=>{const T=P;T.removeEventListener("added",C);let _=!1;T.children.forEach((D,j)=>{if(w[j]){const H=({target:Z})=>{const Y=Z;Y.removeEventListener("onLoad",H),_||(j===0?_=!0:(Y.visible=!1,L.push(Y))),_&&L.forEach(Se=>Se.visible=!0)};D.addEventListener("onLoad",H)}else _||(j===0?(_=!0,L.forEach(H=>H.visible=!0)):(D.visible=!1,L.push(D)))})};x.addEventListener("added",C)}return x});return E.createElement(E.Fragment,null,i.length>0&&i)}),t=r==="LOD"?"lod":`${r[0].toLowerCase()}${r.slice(1)}`;O.reactElements[t]=e},Rr=()=>{const r=["box","capsule","circle","cone","cylinder","dodecahedron","extrude","icosahedron","lathe","octahedron","plane","polyhedron","ring","shape","sphere","tetrahedron","torus","torusKnot","tube","edges","wireframe","rounded","convex","decal","parametric","text","lineCurve","ellipseCurve","arcCurve","catmullRom3","splineCurve","bezierCurve","nurbsCurve","curve","nurbsSurface"],e=(s,n,o)=>{let{divisions:i,dim:a,order:d}=o,m;if(s==="lineCurve")i=i===void 0?1:i,a=a===void 0?2:a,(a===3||a==="3")&&(n=se(n),m=new y.LineCurve3(...n)),(a===2||a==="2")&&(n=we(n),m=new y.LineCurve(...n));else if(s==="ellipseCurve"||s==="arcCurve")i=i===void 0?5:i,m=new y.EllipseCurve(...n);else if(s==="catmullRom3")i=i===void 0?5:i,Array.isArray(n[0])?n[0]=se(n[0]):n=[se(n)],m=new y.CatmullRomCurve3(...n);else if(s==="splineCurve")i=i===void 0?5:i,a=a===void 0?2:a,(a===3||a==="3")&&(n[0]=se(n[0]),m=new y.CatmullRomCurve3(...n)),(a===2||a==="2")&&(Array.isArray(n[0])?n[0]=we(n[0]):n=[we(n)],m=new y.SplineCurve(...n));else if(s==="bezierCurve")i=i===void 0?5:i,a=a===void 0?2:a,d=d===void 0?2:d,(a===3||a==="3")&&(n=se(n),m=d===3||d==="cubic"?new y.CubicBezierCurve3(...n):new y.QuadraticBezierCurve3(...n)),(a===2||a==="2")&&(n=we(n),m=d===3||d==="cubic"?new y.CubicBezierCurve(...n):new y.QuadraticBezierCurve(...n));else if(s==="nurbsCurve"){i=i===void 0?5:i;let{degree:c,knots:h,controlPoints:g}=o;n.length>0&&([c,h,g]=n),g=Ot(g),m=new Ue.NURBSCurve(c,h,g)}const u=m.getPoints(i);return[new y.BufferGeometry().setFromPoints(u),m]},t=(s,n,o)=>{if(s==="nurbsSurface"){let{slices:i=8,stacks:a=8,degree1:d,degree2:m,knots1:u,knots2:l,controlPoints:c}=o;n.length>0&&([d,m,u,l,c]=n);const h=[],g=u.length-d-1;for(let x=0;x<g;x++)h.push(Ot(c[x]));const f=new Re.NURBSSurface(d,m,u,l,h),p=(x,w,L)=>f.getPoint(x,w,L);return[new xe.ParametricGeometry(p,i,a),f]}else return[]};r.forEach(s=>{const n=E.forwardRef((o,i)=>{const d=Je(o,i,s,(m,u)=>{let{children:l,args:c,type:h,...g}=m,f=!1;if(i.current){const v=i.current.geometry;f=!v||v.isRoundedBoxGeometry||v.isConvexGeometry||v.isDecalGeometry||v.isParametricGeometry||v.isTextGeometry}let p;if(i.current&&!f)p=i.current,W(p.geometry,c),W(p.material,g);else{let v=Array.isArray(c)?c:[],x,w,L;if(s.match(/(rounded|convex|decal|parametric|text)/))x=new re[Me[s]](...v);else if(s.match(/(lineCurve|ellipseCurve|arcCurve|catmullRom3|splineCurve|bezierCurve|nurbsCurve)/))[x,w]=e(s,v,g);else if(s==="curve"){const D=h==="catmullRom3"?h:h+"Curve";h=g.linetype==="dashed"?"dashed":"line",[x,w]=e(D,v,g)}else s==="nurbsSurface"?[x,L]=t(s,v,g):x=new y[Me[s]](...v);let C,P,T,_;if(h===void 0?C="basic":[C,P]=h.split("-"),P)_=new He(P,g),T="Mesh";else{let D;switch(C){case"points":D="PointsMaterial",T="Points";break;case"line":D="LineBasicMaterial",T="Line";break;case"dashed":D="LineDashedMaterial",T="Line";break;case"rawShader":D="RawShaderMaterial",T="Mesh";break;case"shader":D="ShaderMaterial",T="Mesh";break;case"shadow":D="ShadowMaterial",T="Mesh";break;case"sprite":D="SpriteMaterial",T="Sprite";break;default:D=h||"basic",D="Mesh"+D[0].toUpperCase()+D.slice(1)+"Material",T="Mesh";break}_=new y[D],W(_,g)}p=new y[T](x,_),C==="dashed"&&p.computeLineDistances(),w&&(p.userData.curve=w),L&&(p.userData.surface=L)}return W(p,u),W(p,g),p});return E.createElement(E.Fragment,null,d.length>0&&d)});O.reactElements[s]=n})},$r=()=>{const r=E.forwardRef((i,a)=>{const{url:d,texture:m,color:u,onLoad:l}=i,c=d||m||u||1644825;O.createBackground(c,l)});O.reactElements.background=r;const e=E.forwardRef((i,a)=>{const{color:d=16777215,intensity:m=1,keyLightPos:u=[-2,-1,3],fillLightPos:l=[2,4,4],backLightPos:c=[1,4,-2],hemisphereLightOn:h=!0,...g}=i;let f;typeof d=="number"?f=d:d.isColor?f=d.getHex():Array.isArray(d)?f=new y.Color().fromArray(d).getHex():typeof d=="string"&&(f=new y.Color(d).getHex());const p=O.reactElements.group;return E.createElement(p,{ref:a,name:"threePointLighting",...g},E.createElement("directionalLight",{args:[f,m*.75*Math.PI],position:u}),E.createElement("directionalLight",{args:[f,m*.375*Math.PI],position:l}),E.createElement("directionalLight",{args:[f,m*.5*Math.PI],position:c}),h&&E.createElement("hemisphereLight",{args:[8175615,16770492,.2*Math.PI],position:[0,1,0]}))});O.reactElements.threePointLighting=e;const t=E.forwardRef((i,a)=>{const{children:d,position:m=[0,100,0],color:u=16777215,intensity:l=1,...c}=i,h=m,g=Math.sqrt(h[0]*h[0]+h[1]*h[1]+h[2]*h[2]),f=-g,p=g,v=g,x=-g,w=g*.1,L=g*2,C=O.reactElements.directionalLight;return E.createElement(C,{ref:a,position:m,args:[u,l],"shadow-mapSize":[1024,1024],"shadow-camera-left":f,"shadow-camera-right":p,"shadow-camera-top":v,"shadow-camera-bottom":x,"shadow-camera-near":w,"shadow-camera-far":L,castShadow:!0,...c})});O.reactElements.shadowDirectionalLight=t;const s=E.forwardRef((i,a)=>{const{children:d,position:m=[0,100,0],color:u=16777215,intensity:l=200,distance:c=0,angle:h=Math.PI/6,penumbra:g=1,decay:f=1.2,...p}=i,v=m,x=Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]),w=x*.1,L=x*2,C=O.reactElements.spotLight;return E.createElement(C,{ref:a,position:m,args:[u,l,c,h,g,f],"shadow-mapSize":[1024,1024],"shadow-camera-near":w,"shadow-camera-far":L,"shadow-focus":1,castShadow:!0,...p})});O.reactElements.shadowSpotLight=s;const n=E.forwardRef((i,a)=>{const{children:d,position:m=[0,100,0],color:u=16777215,intensity:l=200,distance:c=0,decay:h=1.2,...g}=i,f=m,p=Math.sqrt(f[0]*f[0]+f[1]*f[1]+f[2]*f[2]),v=p*.1,x=p*2,w=O.reactElements.pointLight;return E.createElement(w,{ref:a,position:m,args:[u,l,c,h],"shadow-mapSize":[1024,1024],"shadow-camera-near":v,"shadow-camera-far":x,castShadow:!0,...g})});O.reactElements.shadowPointLight=n;const o=E.forwardRef((i,a)=>{const{width:d=100,depth:m=d,type:u="shadow",color:l=0,opacity:c=.5,...h}=i,g=O.reactElements.plane;return E.createElement(g,{ref:a,receiveShadow:!0,"rotation-x":Math.PI/-2,args:[d,m],type:u,color:l,opacity:c,...h})});O.reactElements.shadowPlaneReceiver=o};class kt{parse(e){let t="";function s(n){let o,i="",a="";const d=".png",m=Array.isArray(n.material)?n.material:[n.material];for(let u=0,l=m.length;u<l;u++){let c=function(h,g){if(h.isDataTexture===!0)return console.error("saveTexture: DataTexture not supported.",h),!1;var f=document.createElement("canvas"),p=f.getContext("2d");f.width=h.image.width,f.height=h.image.height,p.drawImage(h.image,0,0);var v=f.toDataURL(),x=document.createElement("a");return document.body.appendChild(x),x.download=g,x.href=v,x.click(),document.body.removeChild(x),!0};if(o=m[u],i=o.name!==""?o.name:`material${o.id}`,t+=`newmtl ${i}
`,o.color){let h=o.color;t+=`Kd ${h.r} ${h.g} ${h.b}
`}if(o.specular){let h=o.specular;t+=`Ks ${h.r} ${h.g} ${h.b}
`}if(o.emissive){let h=o.emissive;t+=`Ke ${h.r} ${h.g} ${h.b}
`}o.shininess&&(t+=`Ns ${o.shininess}
`),o.opacity&&o.opacity<1&&o.transparent===!0&&(t+=`d ${o.opacity}
`,t+=`Tr ${1-o.opacity}
`),o.map&&(a=i+"_diffuse"+d,c(o.map,a)&&(t+="map_Kd "+a+`
`)),o.specularMap&&(a=i+"_specular"+d,c(o.specularMap,a)&&(t+="map_Ks "+a+`
`)),o.emissiveMap&&(a=i+"_emissive"+d,c(o.emissiveMap,a)&&(t+="map_Ke "+a+`
`)),o.normalMap&&(a=i+"_normal"+d,c(o.normalMap,a)&&(t+="norm "+a+`
`)),o.bumpMap&&(a=i+"_bump"+d,c(o.bumpMap,a)&&(t+="map_bump "+a+`
`)),o.alphaMap&&(a=i+"_alpha"+d,c(o.alphaMap,a)&&(t+="map_d "+a+`
`,o.transparent=!0))}}return e.traverse(function(n){n.isMesh===!0&&s(n)}),t}}class _t{parse(e,t,s={}){if(s=Object.assign({version:"1.4.1",author:null,textureDirectory:"",upAxis:"Y_UP",unitName:null,unitMeter:null},s),s.upAxis.match(/^[XYZ]_UP$/)===null)return console.error("ColladaExporter: Invalid upAxis: valid values are X_UP, Y_UP or Z_UP."),null;if(s.unitName!==null&&s.unitMeter===null)return console.error("ColladaExporter: unitMeter needs to be specified if unitName is specified."),null;if(s.unitMeter!==null&&s.unitName===null)return console.error("ColladaExporter: unitName needs to be specified if unitMeter is specified."),null;s.textureDirectory!==""&&(s.textureDirectory=`${s.textureDirectory}/`.replace(/\\/g,"/").replace(/\/+/g,"/"));const n=s.version;if(n!=="1.4.1"&&n!=="1.5.0")return console.warn(`ColladaExporter : Version ${n} not supported for export. Only 1.4.1 and 1.5.0.`),null;function o(M){const A=/^<\//,S=/(\?>$)|(\/>$)/,G=/<[^>]+>[^<]*<\/[^<]+>/,U=($,R)=>R>0?$+U($,R-1):"";let I=0;return M.match(/(<[^>]+>[^<]+<\/[^<]+>)|(<[^>]+>)/g).map($=>{!G.test($)&&!S.test($)&&A.test($)&&I--;const R=`${U("  ",I)}${$}`;return!G.test($)&&!S.test($)&&!A.test($)&&I++,R}).join(`
`)}function i(M){const A=atob(M),S=new Uint8Array(A.length);for(let G=0,U=S.length;G<U;G++)S[G]=A.charCodeAt(G);return S}let a,d;function m(M,A){a=a||document.createElement("canvas"),d=d||a.getContext("2d"),a.width=M.width,a.height=M.height,d.drawImage(M,0,0);const S=a.toDataURL(`image/${A}`,1).replace(/^data:image\/(png|jpg);base64,/,"");return i(S)}const u=["getX","getY","getZ","getW"],l=new B.Color;function c(M,A=!1){if(A){const S=new Float32Array(M.count*3);for(let G=0,U=M.count;G<U;G++)l.fromBufferAttribute(M,G).convertLinearToSRGB(),S[3*G+0]=l.r,S[3*G+1]=l.g,S[3*G+2]=l.b;return S}else if(M.isInterleavedBufferAttribute){const S=new M.array.constructor(M.count*M.itemSize),G=M.itemSize;for(let U=0,I=M.count;U<I;U++)for(let $=0;$<G;$++)S[U*G+$]=M[u[$]](U);return S}else return M.array}function h(M,A,S){return Array.isArray(M)?M.slice(A,A+S):new M.constructor(M.buffer,A*M.BYTES_PER_ELEMENT,S)}function g(M,A,S,G,U=!1){const I=c(M,U);return`<source id="${A}"><float_array id="${A}-array" count="${I.length}">`+I.join(" ")+`</float_array><technique_common><accessor source="#${A}-array" count="${Math.floor(I.length/M.itemSize)}" stride="${M.itemSize}">`+S.map(R=>`<param name="${R}" type="${G}" />`).join("")+"</accessor></technique_common></source>"}let f;function p(M){return M.updateMatrix(),f=f||new B.Matrix4,f.copy(M.matrix),f.transpose(),`<matrix>${f.toArray().join(" ")}</matrix>`}function v(M){let A=C.get(M);if(!A){const S=M;if(S.isBufferGeometry!==!0)throw new Error("THREE.ColladaExporter: Geometry is not of type THREE.BufferGeometry.");const G=`Mesh${j.length+1}`,U=S.index?S.index.count*S.index.itemSize:S.attributes.position.count,I=S.groups!=null&&S.groups.length!==0?S.groups:[{start:0,count:U,materialIndex:0}],$=M.name?` name="${M.name}"`:"";let R=`<geometry id="${G}"${$}><mesh>`;const K=`${G}-position`,ee=`${G}-vertices`;R+=g(S.attributes.position,K,["X","Y","Z"],"float"),R+=`<vertices id="${ee}"><input semantic="POSITION" source="#${K}" /></vertices>`;let X=`<input semantic="VERTEX" source="#${ee}" offset="0" />`;if("normal"in S.attributes){const F=`${G}-normal`;R+=g(S.attributes.normal,F,["X","Y","Z"],"float"),X+=`<input semantic="NORMAL" source="#${F}" offset="0" />`}if("uv"in S.attributes){const F=`${G}-texcoord`;R+=g(S.attributes.uv,F,["S","T"],"float"),X+=`<input semantic="TEXCOORD" source="#${F}" offset="0" set="0" />`}if("uv2"in S.attributes){const F=`${G}-texcoord2`;R+=g(S.attributes.uv2,F,["S","T"],"float"),X+=`<input semantic="TEXCOORD" source="#${F}" offset="0" set="1" />`}if("color"in S.attributes){const F=`${G}-color`;R+=g(S.attributes.color,F,["R","G","B"],"float",!0),X+=`<input semantic="COLOR" source="#${F}" offset="0" />`}let te=null;if(S.index)te=c(S.index);else{te=new Array(U);for(let F=0,Ze=te.length;F<Ze;F++)te[F]=F}for(let F=0,Ze=I.length;F<Ze;F++){const Qe=I[F],qt=h(te,Qe.start,Qe.count),ns=qt.length/3;R+=`<triangles material="MESH_MATERIAL_${Qe.materialIndex}" count="${ns}">`,R+=X,R+=`<p>${qt.join(" ")}</p>`,R+="</triangles>"}R+="</mesh></geometry>",j.push(R),A={meshid:G,bufferGeometry:S},C.set(M,A)}return A}function x(M){let A=T.get(M);if(A==null){A=`image-${D.length+1}`;const S="png",G=M.name||A;let U=`<image id="${A}" name="${G}">`;n==="1.5.0"?U+=`<init_from><ref>${s.textureDirectory}${G}.${S}</ref></init_from>`:U+=`<init_from>${s.textureDirectory}${G}.${S}</init_from>`,U+="</image>",D.push(U),T.set(M,A),_.push({directory:s.textureDirectory,name:G,ext:S,data:m(M.image,S),original:M})}return A}function w(M){let A=P.get(M);if(A==null){A=`Mat${H.length+1}`;let S="phong";M.isMeshLambertMaterial===!0?S="lambert":M.isMeshBasicMaterial===!0&&(S="constant",M.map!==null&&console.warn("ColladaExporter: Texture maps not supported with MeshBasicMaterial."));const G=M.emissive?M.emissive:new B.Color(0,0,0),U=M.color?M.color:new B.Color(0,0,0),I=M.specular?M.specular:new B.Color(1,1,1),$=M.shininess||0,R=M.reflectivity||0;G.convertLinearToSRGB(),I.convertLinearToSRGB(),U.convertLinearToSRGB();let K="";M.transparent===!0&&(K+="<transparent>"+(M.map?'<texture texture="diffuse-sampler"></texture>':"<float>1</float>")+"</transparent>",M.opacity<1&&(K+=`<transparency><float>${M.opacity}</float></transparency>`));const ee=`<technique sid="common"><${S}><emission>`+(M.emissiveMap?'<texture texture="emissive-sampler" texcoord="TEXCOORD" />':`<color sid="emission">${G.r} ${G.g} ${G.b} 1</color>`)+"</emission>"+(S!=="constant"?"<diffuse>"+(M.map?'<texture texture="diffuse-sampler" texcoord="TEXCOORD" />':`<color sid="diffuse">${U.r} ${U.g} ${U.b} 1</color>`)+"</diffuse>":"")+(S!=="constant"?"<bump>"+(M.normalMap?'<texture texture="bump-sampler" texcoord="TEXCOORD" />':"")+"</bump>":"")+(S==="phong"?`<specular><color sid="specular">${I.r} ${I.g} ${I.b} 1</color></specular><shininess>`+(M.specularMap?'<texture texture="specular-sampler" texcoord="TEXCOORD" />':`<float sid="shininess">${$}</float>`)+"</shininess>":"")+`<reflective><color>${U.r} ${U.g} ${U.b} 1</color></reflective><reflectivity><float>${R}</float></reflectivity>`+K+`</${S}></technique>`,X=`<effect id="${A}-effect"><profile_COMMON>`+(M.map?`<newparam sid="diffuse-surface"><surface type="2D"><init_from>${x(M.map)}</init_from></surface></newparam><newparam sid="diffuse-sampler"><sampler2D><source>diffuse-surface</source></sampler2D></newparam>`:"")+(M.specularMap?`<newparam sid="specular-surface"><surface type="2D"><init_from>${x(M.specularMap)}</init_from></surface></newparam><newparam sid="specular-sampler"><sampler2D><source>specular-surface</source></sampler2D></newparam>`:"")+(M.emissiveMap?`<newparam sid="emissive-surface"><surface type="2D"><init_from>${x(M.emissiveMap)}</init_from></surface></newparam><newparam sid="emissive-sampler"><sampler2D><source>emissive-surface</source></sampler2D></newparam>`:"")+(M.normalMap?`<newparam sid="bump-surface"><surface type="2D"><init_from>${x(M.normalMap)}</init_from></surface></newparam><newparam sid="bump-sampler"><sampler2D><source>bump-surface</source></sampler2D></newparam>`:"")+ee+(M.side===B.DoubleSide?'<extra><technique profile="THREEJS"><double_sided sid="double_sided" type="int">1</double_sided></technique></extra>':"")+"</profile_COMMON></effect>",te=M.name?` name="${M.name}"`:"",F=`<material id="${A}"${te}><instance_effect url="#${A}-effect" /></material>`;Z.push(F),H.push(X),P.set(M,A)}return A}function L(M){let A=`<node name="${M.name}">`;if(A+=p(M),M.isMesh===!0&&M.geometry!==null){const S=v(M.geometry),G=S.meshid,U=S.bufferGeometry;let I=null,$;const R=M.material||new B.MeshBasicMaterial,K=Array.isArray(R)?R:[R];U.groups.length>K.length?$=new Array(U.groups.length):$=new Array(K.length),I=$.fill().map((ee,X)=>w(K[X%K.length])),A+=`<instance_geometry url="#${G}">`+(I.length>0?"<bind_material><technique_common>"+I.map((ee,X)=>`<instance_material symbol="MESH_MATERIAL_${X}" target="#${ee}" ><bind_vertex_input semantic="TEXCOORD" input_semantic="TEXCOORD" input_set="0" /></instance_material>`).join("")+"</technique_common></bind_material>":"")+"</instance_geometry>"}return M.children.forEach(S=>A+=L(S)),A+="</node>",A}const C=new WeakMap,P=new WeakMap,T=new WeakMap,_=[],D=[],j=[],H=[],Z=[],Y=L(e);let J=`<?xml version="1.0" encoding="UTF-8" standalone="no" ?><COLLADA xmlns="${n==="1.4.1"?"http://www.collada.org/2005/11/COLLADASchema":"https://www.khronos.org/collada/"}" version="${n}"><asset>`+("<contributor><authoring_tool>three.js Collada Exporter</authoring_tool>"+(s.author!==null?`<author>${s.author}</author>`:"")+`</contributor><created>${new Date().toISOString()}</created><modified>${new Date().toISOString()}</modified>`+(s.unitName!==null?`<unit name="${s.unitName}" meter="${s.unitMeter}" />`:"")+`<up_axis>${s.upAxis}</up_axis>`)+"</asset>";J+=`<library_images>${D.join("")}</library_images>`,J+=`<library_effects>${H.join("")}</library_effects>`,J+=`<library_materials>${Z.join("")}</library_materials>`,J+=`<library_geometries>${j.join("")}</library_geometries>`,J+=`<library_visual_scenes><visual_scene id="Scene" name="scene">${Y}</visual_scene></library_visual_scenes>`,J+='<scene><instance_visual_scene url="#Scene"/></scene>',J+="</COLLADA>";const Te={data:o(J),textures:_};return typeof t=="function"&&requestAnimationFrame(()=>t(Te)),Te}}const V=function(){const r=document.createElement("a");this.saveFile=function(e,t){const s=e.split(".").pop().toLowerCase();switch(t||(t=useThree().scene),s){case"json":n(t,e);break;case"obj":o(t,e);break;case"dae":i(t,e);break;case"glb":a(t,e);break;case"gltf":d(t,e);break;case"stl":m(t,e);break;case"ply":u(t,e);break;default:console.log('The file type "'+s+'" is not supported.');break}function n(g,f="object.json"){const p=(x,w)=>typeof w=="number"?parseFloat(w.toFixed(6)):w;let v=g.toJSON();try{v=JSON.stringify(v,p,"	"),v=v.replace(/[\n\t]+([\d\.e\-\[\]]+)/g,"$1")}catch{v=JSON.stringify(v)}l(v,f)}function o(g,f="model.obj"){const p=f,v=p.replace(".obj",""),x=v+".mtl",{OBJExporter:w}=V.exporters,L=new w;l(L.parse(g,v),p);const{MTLExporter:C}=V.exporters,P=new C;l(P.parse(g),x)}function i(g,f="scene.dae"){const{ColladaExporter:p}=V.exporters;new p().parse(g,function(x){l(x.data,f)})}function a(g,f="scene.glb"){const{GLTFExporter:p}=V.exporters,v=new p,x={binary:!0};v.parse(g,function(w){c(w,f)},function(w){console.log("An error happened during parsing",w)},x)}function d(g,f="scene.gltf"){const{GLTFExporter:p}=V.exporters,v=new p,x={binary:!1};v.parse(g,function(w){l(JSON.stringify(w,null,2),f)},function(w){console.log("An error happened during parsing",w)},x)}function m(g,f="model.stl",p=!1){const{STLExporter:v}=V.exporters,x=new v;p===!0?l(x.parse(g),f):c(x.parse(g,{binary:!0}),f)}function u(g,f="model.ply"){const{PLYExporter:p}=V.exporters,v=new p;l(v.parse(g),f)}function l(g,f){h(new Blob([g],{type:"text/plain"}),f)}function c(g,f){h(new Blob([g],{type:"application/octet-stream"}),f)}function h(g,f){r.href=URL.createObjectURL(g),r.download=f,r.dispatchEvent(new MouseEvent("click")),URL.revokeObjectURL(r.href)}}};V.exporters={},V.setExporter=r=>{V.exporters={...V.exporters,...r}};const Fr=r=>{switch(r.split(".").pop().toLowerCase()){case"obj":V.setExporter({OBJExporter:Xt.OBJExporter,MTLExporter:kt});break;case"dae":V.setExporter({ColladaExporter:_t});break;case"glb":V.setExporter({GLTFExporter:yt.GLTFExporter});break;case"gltf":V.setExporter({GLTFExporter:yt.GLTFExporter});break;case"stl":V.setExporter({STLExporter:Jt.STLExporter});break;case"ply":V.setExporter({PLYExporter:Wt.PLYExporter});break}},jr=(r,e)=>{const t=new V;Fr(r),t.saveFile(r,e)},Ir="https://unpkg.com/browse/three@0.161.0/examples/jsm/libs/basis/",Dt="https://www.gstatic.com/draco/versioned/decoders/1.5.6/",k=function(){const r=this;this.imageFiles=[],this.mtlFile=null,this.loadItemList=u=>{Gt.getFilesFromItemList(u,(l,c)=>{r.loadFiles(l,c)})},this.loadFiles=async function(u,l){if(u.length>0){l=l||Gt.createFilesMap(u);const c=n();c.setURLModifier(h=>{h=h.replace(/^(\.?\/)/,"");const g=l[h];return g?(console.log("Loading",h),URL.createObjectURL(g)):h}),this.imageFiles=[],this.mtlFile=null;for(let h=0;h<u.length;h++)u[h].name.match(/\.(png|jpg|gif)$/i)?this.imageFiles.push(u[h]):u[h].name.match(/\.(mtl)$/i)&&(this.mtlFile=u[h]);for(let h=0;h<u.length;h++)this.loadFile(u[h],c);this.imageFiles.length=0,this.mtlFile=null}},this.loadFile=function(u,l){const c=u.name,h=c.split(".").pop().toLowerCase(),g=new FileReader;switch(g.addEventListener("progress",f=>{const p="("+Math.floor(f.total/1e3).toLocaleString()+" KB)",v=Math.floor(f.loaded/f.total*100)+"%";console.log("Loading",c,p,v)}),h){case"3ds":case"3mf":case"amf":case"drc":case"fbx":case"md2":case"glb":case"gltf":case"kmz":case"ply":case"stl":case"vtk":case"vox":g.addEventListener("load",v=>e(h,v,c,l,!1),!1),g.readAsArrayBuffer(u);break;case"dae":case"js":case"json":case"svg":case"wrl":g.addEventListener("load",v=>e(h,v,c,l,!1),!1),g.readAsText(u);break;case"obj":let f=function(v,x=null){g.addEventListener("load",async function(w){const L=w.target.result,{OBJLoader:C}=k.loaders,P=new C(l);x&&P.setMaterials(x);const T=P.parse(L);T.name=c,a(T)},!1),g.readAsText(v)};(function(v,x){if(x){const w=new FileReader;w.addEventListener("load",async function(L){const C=L.target.result,{MTLLoader:P}=k.loaders,T=new P(l).parse(C);T.preload(),console.log("Loading",x.name),f(v,T)},!1),w.readAsText(x)}else f(v)})(u,this.mtlFile);break;case"zip":setTimeout(()=>{g.addEventListener("load",v=>t(v.target.result,c),!1),g.readAsArrayBuffer(u)},10);break;default:["png","jpg","gif","bmp","tga","mtl","bin"].includes(h)||console.log("Unsupported 3D file format:",h);break}};async function e(u,l,c,h,g=!1){if(g){const f=l;if(u==="dae"||u==="gltf"||u==="wrl"){const{strFromU8:p}=k.loaders;l=p(f)}else l=f.buffer}else l=l.target.result;switch(u){case"3ds":{const{TDSLoader:f}=k.loaders,v=new f(h).parse(l);v.name=c,a(v);break}case"3mf":{const{ThreeMFLoader:f}=k.loaders,v=new f(h).parse(l);v.name=c,a(v);break}case"amf":{const{AMFLoader:f}=k.loaders,v=new f(h).parse(l);v.name=c,a(v);break}case"dae":{const{ColladaLoader:f}=k.loaders,v=new f(h).parse(l);v.scene.name=c,i(v.scene,v.animations),a(v.scene);break}case"drc":{const{DRACOLoader:f}=k.loaders,p=new f(h);p.setDecoderPath(Dt),p.parse(l,function(v){v.center(),o(v);let x;if(v.index!==null){const w=new y.MeshStandardMaterial;x=new y.Mesh(v,w),x.name=c}else{const w=new y.PointsMaterial({size:.01});v.hasAttribute("color")===!0&&(w.vertexColors=!0),x=new y.Points(v,w),x.name=c}p.dispose(),a(x)});break}case"fbx":{const{FBXLoader:f}=k.loaders,v=new f(h).parse(l);v.name=c,i(v,v.animations),a(v);break}case"md2":{const{MD2Loader:f}=k.loaders,v=new f(h).parse(l);let x=null;if(g)for(let C in r.zip){let P=C.split(".").pop().toLowerCase();if(P==="jpg"&&(P="jpeg"),["png","jpeg","gif"].includes(P)){const T=r.zip[C],_="image/"+P,D=new Blob([T.buffer],{type:_}),j=URL.createObjectURL(D);x=new y.TextureLoader().load(j);break}}else r.imageFiles.length===1&&(x=new y.TextureLoader().load(URL.createObjectURL(r.imageFiles[0])));const w=new y.MeshStandardMaterial({map:x}),L=new y.Mesh(v,w);L.mixer=new y.AnimationMixer(L),L.name=c,i(L,v.animations),a(L);break}case"glb":{const f=await s(h);f.parse(l,"",function(p){const v=p.scene;v.name=c,i(v,p.animations),a(v),f.dracoLoader.dispose(),f.ktx2Loader.dispose()});break}case"gltf":{const f=await s(h);f.parse(l,"",function(p){const v=p.scene;v.name=c,i(v,p.animations),a(v),f.dracoLoader.dispose(),f.ktx2Loader.dispose()});break}case"js":case"json":{const f=f;if(f.indexOf("postMessage")!==-1){const v=new Blob([f],{type:"text/javascript"}),x=URL.createObjectURL(v),w=new Worker(x);w.onmessage=function(L){L.data.metadata={version:2},m(L.data)},w.postMessage(Date.now());return}let p;try{p=JSON.parse(f)}catch(v){alert(v);return}m(p);break}case"kmz":{const{KMZLoader:f}=k.loaders,v=new f(h).parse(l);v.scene.name=c,a(v.scene);break}case"mtl":{g&&(r.bufferMTL=l);break}case"obj":{g&&(r.bufferOBJ=l);break}case"ply":{const{PLYLoader:f}=k.loaders,p=new f(h).parse(l);o(p);const v=new y.MeshStandardMaterial,x=new y.Mesh(p,v);x.name=c,a(x);break}case"stl":{const{STLLoader:f}=k.loaders,p=new f(h).parse(l);o(p);const v=new y.MeshStandardMaterial({vertexColors:!!p.hasColors}),x=new y.Mesh(p,v);x.name=c,a(x);break}case"svg":{const{SVGLoader:f}=k.loaders,v=new f(h).parse(l).paths,x=new y.Group;x.scale.multiplyScalar(.1),x.scale.y*=-1;for(let w=0;w<v.length;w++){const L=v[w],C=new y.MeshBasicMaterial({color:L.color,depthWrite:!1}),P=f.createShapes(L);for(let T=0;T<P.length;T++){const _=P[T],D=new y.ShapeGeometry(_),j=new y.Mesh(D,C);x.add(j)}}x.name=c,a(x);break}case"vtk":{const{VTKLoader:f}=k.loaders,p=new f(h).parse(l);o(p);const v=new y.MeshStandardMaterial,x=new y.Mesh(p,v);x.name=c,a(x);break}case"vox":{const{VOXLoader:f,VOXMesh:p}=k.loaders,x=new f(h).parse(l).map(L=>new p(L)),w=new y.Group;w.add(...x),w.name=c,a(w);break}case"wrl":{const{VRMLLoader:f}=k.loaders,p=new f(h).parse(l);p.name=c,a(p);break}case"zip":{t(l,c);break}default:{["png","jpg","gif","bmp","tga","mtl","bin"].includes(u)||console.log("Unsupported 3D file format:",u);break}}}async function t(u,l){const{unzipSync:c,strFromU8:h}=k.loaders,g=c(new Uint8Array(u));r.zip=g;const f=n();f.setURLModifier(p=>{const v=g[p];if(v){console.log("Loading",p);const x=new Blob([v.buffer],{type:"application/octet-stream"});return URL.createObjectURL(x)}return p}),r.bufferOBJ=null,r.bufferMTL=null;for(let p in g){const v=g[p],x=p.split(".").pop().toLowerCase();e(x,v,l,f,!0)}if(r.bufferMTL&&r.bufferOBJ){const{OBJLoader:p,MTLLoader:v}=k.loaders,x=new v(f).parse(h(r.bufferMTL)),w=new p(f).setMaterials(x).parse(h(r.bufferOBJ));w.name=l,a(w)}r.bufferOBJ=null,r.bufferMTL=null,r.zip=null}async function s(u){const{GLTFLoader:l,KTX2Loader:c,DRACOLoader:h,MeshoptDecoder:g}=k.loaders,f=new l(u);if(h){const p=new h;p.setDecoderPath(Dt),f.setDRACOLoader(p)}if(c){const p=new c;p.setTranscoderPath(Ir),p.detectSupport(q().threefy.renderer),f.setKTX2Loader(p)}return g&&f.setMeshoptDecoder(g),Promise.resolve(f).then(p=>p)}function n(){const u=new y.LoadingManager;return u.onStart=()=>{zr()},u.onProgress=(l,c,h)=>{qr(c,h)},u.onLoad=()=>{Nr()},u.onError=l=>{Hr("There was an error loading "+l)},u}function o(u){let l=!1;if(u.isDiscreteGeometry===!0){const c=u.faces[0].vertexNormals;c&&c.length===3&&(l=!0)}else if(u.isBufferGeometry===!0){const c=u.attributes.normal;c&&c.count>0&&(l=!0)}l===!1&&u.computeVertexNormals()}function i(u,l){l&&l.length>0&&u.animations.push(...l)}function a(u){const{threefy:l}=q(),c=l._cache.get(u.name);c[0]=u;for(let h=1,g=c.length;h<g;h++)c[h].dispatchEvent({type:u.name})}function d(u){q().threefy.setScene(u)}function m(u){switch(u.metadata===void 0&&(u.metadata={type:"DiscreteGeometry"}),u.metadata.type===void 0&&(u.metadata.type="DiscreteGeometry"),u.metadata.formatVersion!==void 0&&(u.metadata.version=u.metadata.formatVersion),u.metadata.type.toLowerCase()){case"buffergeometry":{const c=new y.BufferGeometryLoader().parse(u),h=new y.Mesh(c);a(h);break}case"discretegeometry":{console.error('ThreeLoader: "DiscreteGeometry" is no longer supported.');break}case"object":{new y.ObjectLoader().parse(u,function(c){c.isScene?d(c):c.name==="natureObject"?c.children.forEach(function(h){add(cloneObject(h))}):a(c)});break}}}this.openFiles=function(){const u=document.createElement("div");u.style.cssText="position: absolute; left: 44%; top: 48%;";const l=document.createElement("input");l.id="file-input",l.type="file",l.multiple=!0,l.style.display="none",l.addEventListener("change",()=>{u.remove(),l.files&&r.loadFiles(l.files)});const c=document.createElement("label");c.htmlFor="file-input",c.style.cssText="color: white; background-color: #3276c3; font-weight: bold; cursor: pointer; padding: 0.625rem; border-radius: 0.4rem;",c.addEventListener("mouseover",()=>{c.style.backgroundColor="#333"}),c.addEventListener("mouseleave",()=>{c.style.backgroundColor="#3276c3"}),c.innerHTML=`
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 17" style="width:1em; height:1em; fill:currentColor; vertical-align: middle; margin-top: -0.25em; margin-right: 0.25em;">
                <path d="M18.125,15.804l-4.038-4.037c0.675-1.079,1.012-2.308,1.01-3.534C15.089,4.62,12.199,1.75,8.584,1.75C4.815,1.75,1.982,4.726,2,8.286c0.021,3.577,2.908,6.549,6.578,6.549c1.241,0,2.417-0.347,3.44-0.985l4.032,4.026c0.167,0.166,0.43,0.166,0.596,0l1.479-1.478C18.292,16.234,18.292,15.968,18.125,15.804 M8.578,13.99c-3.198,0-5.716-2.593-5.733-5.71c-0.017-3.084,2.438-5.686,5.74-5.686c3.197,0,5.625,2.493,5.64,5.624C14.242,11.548,11.621,13.99,8.578,13.99 M16.349,16.981l-3.637-3.635c0.131-0.11,0.721-0.695,0.876-0.884l3.642,3.639L16.349,16.981z"></path>
            </svg>
            <span>Choose files</span>
        `,u.appendChild(l),u.appendChild(c),document.body.append(u)},this.dragDropFiles=function(u){u||(u=q().threefy.dom),u.addEventListener("dragover",function(l){l.preventDefault(),l.stopPropagation(),u.classList.add("dragover")}),u.addEventListener("dragleave",function(l){l.preventDefault(),l.stopPropagation(),u.classList.remove("dragover")}),u.addEventListener("drop",function(l){l.preventDefault(),l.dataTransfer.types[0]!=="text/plain"&&(l.dataTransfer.items?r.loadItemList(l.dataTransfer.items):r.loadFiles(l.dataTransfer.files))},!1)}};k.loaders={},k.setLoader=r=>{k.loaders={...k.loaders,...r}};const Gt={createFilesMap:function(r){const e={};for(let t=0;t<r.length;t++){const s=r[t];e[s.name]=s}return e},getFilesFromItemList:function(r,e){let t=0,s=0;const n=[],o={};function i(){t++,t===s&&e(n,o)}function a(d){d&&(d.isDirectory?d.createReader().readEntries(function(u){for(let l=0;l<u.length;l++)a(u[l]);i()}):d.isFile&&d.file(function(m){n.push(m),o[d.fullPath.substr(1)]=m,i()}),s++)}for(let d=0;d<r.length;d++)a(r[d].webkitGetAsEntry())}},Vr=function(r,e){const t=r.map(async s=>{let o=await(await fetch(s)).blob(),i;return s.split(".").pop()==="enc"?(o=null,i=s.replace(".enc","")):i=s,i=i.split("/").pop().split("?")[0],o?new File([o],i):null});Promise.all(t).then(s=>{s=s.filter(o=>o),new k().loadFiles(s)})},zr=function(){let r=document.getElementById("loading-spinner");if(r){r.style.display="";return}r=document.createElement("div"),r.id="loading-spinner",r.innerHTML=`
        <div style="position: absolute; left: 45%; top: 45%; width: 10%; vertical-align: middle; text-align: center;">
            <p style="color: white; font-size: 1.125rem; font-weight: 500;">Loading...</p>
            <div style="margin-top: 0.5rem">
                <svg aria-hidden="true" style="display: inline; width: 2.5rem; height: 2.5rem; margin-right: 0.5rem; color: rgb(229 231 235); animation: spin 1s linear infinite; fill: #2563eb;" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"/>
                    <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"/>
                </svg>
            </div>
        </div>
    `,document.body.appendChild(r);const e=document.createElement("style");e.id="spin-keyframes",e.innerHTML=`
        @keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
    `,document.head.appendChild(e)},Nr=function(){const r=document.getElementById("loading-spinner");r&&(r.style.display="none")},qr=function(r,e){const t=document.getElementById("loading-spinner");t&&(t.style.width=`${r/e*100|0}%`)},Hr=function(r){console.warn(r)},Kr=r=>new Promise(async e=>{let s=await(await fetch(r)).blob();const n=r.split("/").pop().split("?")[0],o=new File([s],n),i=new FileReader;i.addEventListener("load",a=>{const d=a.target.result,m=$e.unzipSync(new Uint8Array(d));e(Object.keys(m))},!1),i.readAsArrayBuffer(o)}),Bt=r=>{switch(r.split(".").pop().toLowerCase()){case"3ds":k.setLoader({TDSLoader:dr.TDSLoader});break;case"3mf":k.setLoader({ThreeMFLoader:rr.ThreeMFLoader});break;case"amf":k.setLoader({AMFLoader:tr.AMFLoader});break;case"dae":k.setLoader({ColladaLoader:sr.ColladaLoader});break;case"drc":k.setLoader({DRACOLoader:vt.DRACOLoader});break;case"fbx":k.setLoader({FBXLoader:Qt.FBXLoader});break;case"md2":k.setLoader({MD2Loader:Zt.MD2Loader});break;case"gltf":case"glb":k.setLoader({GLTFLoader:ur.GLTFLoader,KTX2Loader:hr.KTX2Loader,DRACOLoader:vt.DRACOLoader,MeshoptDecoder:fr.MeshoptDecoder});break;case"kmz":k.setLoader({KMZLoader:lr.KMZLoader});break;case"mtl":case"obj":k.setLoader({OBJLoader:ir.OBJLoader,MTLLoader:ar.MTLLoader});break;case"ply":k.setLoader({PLYLoader:nr.PLYLoader});break;case"stl":k.setLoader({STLLoader:or.STLLoader});break;case"svg":k.setLoader({SVGLoader:cr.SVGLoader});break;case"vtk":k.setLoader({VTKLoader:Yt.VTKLoader});break;case"vox":k.setLoader({VOXLoader:bt.VOXLoader,VOXMesh:bt.VOXMesh});break;case"wrl":k.setLoader({VRMLLoader:er.VRMLLoader});break;case"zip":k.setLoader({unzipSync:$e.unzipSync,strFromU8:$e.strFromU8}),Kr(r).then(t=>{t.forEach(s=>Bt(s))});break}},Ut=(r,e="texture")=>{r=Array.isArray(r)?r:[r];const{threefy:t}=q();let s;e==="texture"&&(s=new y.TextureLoader),e==="audio"&&(s=new y.AudioLoader);const n=o=>{let i=t._cache.get(o);return i?Promise.resolve(i):new Promise(a=>{s.load(o,d=>{t._cache.set(o,d),a(d)})})};return new Promise(o=>{Promise.all(r.map(i=>n(i))).then(i=>o(i.length===1?i[0]:i))})},Xr=r=>Ut(r,"texture"),Rt=r=>Ut(r,"audio"),Wr=r=>{r=Array.isArray(r)?r:[r];const{threefy:e}=q(),t=r.map(s=>e.loadTexture(s));return t.length===1?t[0]:t},Jr=r=>{if(r=Array.isArray(r)?r:[r],/png|jpg|jpeg|gif|bmp/i.test(r[0].split(".").pop()))return Wr(r);if(/mp3|ogg|wav/i.test(r[0].split(".").pop()))return Rt(r);r.forEach(o=>Bt(o));const e=o=>o.split("/").pop(),{threefy:t}=q(),s=[],n=({target:o})=>{const a=t._cache.get(o.name)[0],d=s.map(l=>l.name).indexOf(o.name);s[d]=a;const m=o;m.removeEventListener(m.name,n);const u=m.parent;u&&(u.remove(m),u.add(a)),a._listeners=m._listeners,a.applyMatrix4(m.matrix),a.dispatchEvent({type:"onLoad"})};return r.forEach((o,i)=>{const a=e(o),d=new y.Object3D;d.name=a,t._cache.has(a)?(t._cache.get(a).push(d),r[i]=null):t._cache.set(a,[null,d]),d.addEventListener(a,n),s.push(d)}),r=r.filter(o=>o!==null),r.length>0&&Vr(r),s.length===1?s[0]:s};class Q{constructor(e,t,s,n){this.x=e,this.y=t,this.width=s,this.height=n,this.finalX=e+s,this.finalY=t+n}overlaps(e){return this.x<e.x+e.width&&this.x+this.width>e.x&&this.y<e.y+e.height&&this.y+this.height>e.y}}class Yr{constructor(e,t=512,s=512,n=!0,o=4096){if(this.MAX_TEXTURE_SIZE=o,!e)return;this.texturesObj=e,this.textureNames=Object.keys(e),this.texWidth=t,this.texHeight=s;const i={};this.textureNames.forEach(c=>{const h=e[c].uuid;i[h]||(i[h]=[]),i[h].push(c)}),this.uuid2Names=i,this.canvas=document.createElement("canvas"),this.textureCount=this.textureNames.length,this.maxWidth=t,this.maxHeight=s,this.textureCache={},this.node={},this.node.rectangle=new Q(0,0,this.maxWidth*this.textureCount,this.maxHeight*this.textureCount),this.textureOffsets={},this.allNodes=[],this.insert(this.node,this.findNextTexture()),this.ranges={};const a=this.calculateImageSize();this.canvas.width=a.width,this.canvas.height=a.height;const d=this.canvas.getContext("2d");this.context=d;const[m,u]=[this.texWidth,this.texHeight],l=this.textureOffsets;Object.keys(l).forEach(c=>{const h=e[c],g=l[c].x,f=l[c].y;d.drawImage(h.image,g,f,m,u);const p={};p.startU=g/a.width,p.endU=(g+m)/a.width,p.startV=f/a.height,p.endV=(f+u)/a.height,n&&(p.startV=1-p.startV,p.endV=1-p.endV),this.ranges[c]=p}),this.makeCanvasPowerOfTwo(),this.mergedTexture=new y.CanvasTexture(this.canvas),this.mergedTexture.wrapS=y.ClampToEdgeWrapping,this.mergedTexture.wrapT=y.ClampToEdgeWrapping,this.mergedTexture.minFilter=y.LinearMipmapLinearFilter,this.mergedTexture.magFilter=y.LinearFilter,this.mergedTexture.flipY=n}isTextureAlreadyInserted(e){const t=this,n=this.texturesObj[e].uuid,i=this.uuid2Names[n].find(a=>t.textureOffsets[a]);return i?this.textureOffsets[i]:!1}insert(e,t){let n,[o,i]=[e,t];for(n=0;n<65536&&([o,i]=this._insert(o,i),!!i);n++);n===65536&&console.warn("TextureMerger.insert(): max iteration exceeded! try to increase the MAX_ITERS value")}_insert(e,t){const s=this.textureOffsets,n=this.isTextureAlreadyInserted(t);if(n){s[t]=n;const a=this.findNextTexture();return[e,a]}const[o,i]=[this.texWidth,this.texHeight];if(e.upperNode){let a=this.maxWidth*this.textureCount+this.maxHeight*this.textureCount,d=0,m=!1;const u=this.texturesObj;for(let l=0;l<this.allNodes.length;l++){const c=this.allNodes[l];if(!c.textureName){s[t]={x:c.rectangle.x,y:c.rectangle.y};const h=this.calculateImageSize(),g=h.width+h.height;if(g<a&&h.width<=this.MAX_TEXTURE_SIZE&&h.height<=this.MAX_TEXTURE_SIZE){let f=!1;Object.keys(s).forEach(p=>{if(p===t)return;const v=c.rectangle,x=s[p].x,w=s[p].y,L=u[p].image,C=new Q(v.x,v.y,o,i),P=new Q(x,w,L.width,L.height);C.overlaps(P)&&(f=!0)}),f||(a=g,d=this.allNodes[l],m=!0)}delete s[t]}}if(m){if(s[t]={x:d.rectangle.x,y:d.rectangle.y},d.textureName=t,!d.children){const c={},h={};c.upperNode=d,h.upperNode=d,d.children=[c,h];const g=d.rectangle.x,f=d.rectangle.y,p=this.maxWidth*this.textureCount,v=this.maxHeight*this.textureCount;c.rectangle=new Q(g+o,f,p-(g+o),v-f),h.rectangle=new Q(g,f+i,p-g,v-(f+i)),this.allNodes.push(c),this.allNodes.push(h)}const l=this.findNextTexture();return[e,l]}else throw new Error("Error: Try to use smaller textures.")}else{const a=e.rectangle.width,d=e.rectangle.height;e.textureName=t;const m={},u={};m.upperNode=e,u.upperNode=e,e.children=[m,u],m.rectangle=new Q(o,0,a-o,i),u.rectangle=new Q(0,i,a,d-i),s[t]={x:e.rectangle.x,y:e.rectangle.y};const l=e.children[0];this.allNodes=[e,m,u];const c=this.findNextTexture();return[l,c]}}makeCanvasPowerOfTwo(e){let t=!1;e||(e=this.canvas,t=!0);const s=e.width,n=e.height,o=Math.pow(2,Math.round(Math.log(s)/Math.log(2))),i=Math.pow(2,Math.round(Math.log(n)/Math.log(2))),a=document.createElement("canvas");return a.width=o,a.height=i,a.getContext("2d").drawImage(e,0,0,o,i),t&&(this.canvas=a),a}calculateImageSize(){let e=0,t=0;const[s,n]=[this.texWidth,this.texHeight],o=this.textureOffsets;return Object.keys(o).forEach(i=>{const a=o[i].x,d=o[i].y;e=Math.max(a+s,e),t=Math.max(d+n,t)}),{width:e,height:t}}findNextTexture(){const e=this,t=this.textureNames.find(s=>!e.textureCache[s]);return t?(this.textureCache[t]=!0,t):null}toSameLayout(e,t){const s=this.calculateImageSize(),n=document.createElement("canvas");n.width=s.width,n.height=s.height;const o=n.getContext("2d"),[i,a]=[this.texWidth,this.texHeight],d=this.textureOffsets;Object.keys(d).forEach(l=>{const c=e[l],h=d[l].x,g=d[l].y;o.drawImage(c.image,h,g,i,a)});const m=this.makeCanvasPowerOfTwo(n),u=new y.CanvasTexture(m);return u.wrapS=y.ClampToEdgeWrapping,u.wrapT=y.ClampToEdgeWrapping,u.minFilter=y.LinearMipmapLinearFilter,u.magFilter=y.LinearFilter,u.flipY=t,u}}const Zr=(r,e,t)=>{const{diffuse:s,opacity:n}=t,{color:o,emissive:i,specular:a,shininess:d,metalness:m,roughness:u}=t,{ior:l,specularIntensity:c,specularColor:h}=t,{clearcoat:g,clearcoatRoughness:f,dispersion:p}=t,{iridescence:v,iridescenceIOR:x,iridescenceThicknessMinimum:w,iridescenceThicknessMaximum:L}=t,{sheenColor:C,sheenRoughness:P,anisotropyVector:T}=t;s?r.setValue(e,"diffuse",...s):r.setValue(e,"diffuse",1,1,1),n!==void 0&&r.setValue(e,"opacity",n),o&&r.setValue(e,"diffuse",...o),i&&r.setValue(e,"emissive",...i),a&&r.setValue(e,"specular",...a),d!==void 0&&r.setValue(e,"shininess",d),m!==void 0&&r.setValue(e,"metalness",m),u!==void 0&&r.setValue(e,"roughness",u),l!==void 0&&r.setValue(e,"ior",l),c!==void 0&&r.setValue(e,"specularIntensity",c),h&&r.setValue(e,"specularColor",...h),g!==void 0&&r.setValue(e,"clearcoat",g),f!==void 0&&r.setValue(e,"clearcoatRoughness",f),p!==void 0&&r.setValue(e,"dispersion",p),v!==void 0&&r.setValue(e,"iridescence",v),x!==void 0&&r.setValue(e,"iridescenceIOR",x),w!==void 0&&r.setValue(e,"iridescenceThicknessMinimum",w),L!==void 0&&r.setValue(e,"iridescenceThicknessMaximum",L),C&&r.setValue(e,"sheenColor",...C),P!==void 0&&r.setValue(e,"sheenRoughness",P),T&&r.setValue(e,"anisotropyVector",...T)},$t=(r,e=512,t=512)=>{if(!r||r.length===0)return;let s=!0;const n=(w,L,C,P="white")=>{const T=w[`${L}-${C}`];if(T)return T;const _=document.createElement("canvas"),D=_.getContext("2d");_.width=L,_.height=C,D.fillStyle=P,D.fillRect(0,0,L,C);const j=new y.CanvasTexture(_);return w[`${L}-${C}`]=j,j},o=(w,L,C,P)=>{const T=w[L.uuid];if(T)return T;L.image||console.warn("resizeTexture(): image data not found in your texture"),s=L.flipY;const _=document.createElement("canvas"),D=_.getContext("2d");_.width=C,_.height=P,D.drawImage(L.image,0,0,C,P);const{mapping:j,wrapS:H,wrapT:Z,magFilter:Y,minFilter:Se,format:J,type:Te,anisotropy:M,colorSpace:A}=L,S=new y.CanvasTexture(_,j,H,Z,Y,Se,J,Te,M);return S.colorSpace=A,S.uuid=L.uuid,w[S.uuid]=S,S},i={},a={},d={},m={};let u;const{renderer:l}=q(),c=l.capabilities.maxTextureSize;let h=["alphaMap","aoMap","bumpMap","displacementMap","emissiveMap","envMap","lightMap","map","specularMap","metalnessMap","normalMap","roughnessMap","clearcoatMap","clearcoatNormalMap","clearcoatRoughnessMap","transmissionMap"];const g=r.map(w=>{const L=w.material;return Array.isArray(L)?L[0]:L});if(h.forEach(w=>{g.map(C=>!!C[w]).every(C=>C===!1)||(i[w]={})}),h=Object.keys(i),h.length>0){h.forEach(C=>{g.forEach((P,T)=>{const _=`${T}`,D=P[C];D?i[C][_]=o(a,D,e,t):i[C][_]=n(d,e,t)})});const w=i.map?"map":h.find(C=>!!i[C]),L=new Yr(i[w],e,t,s,c);u=L.ranges,m[w]=L.mergedTexture,h.forEach(C=>{C!==w&&(m[C]=L.toSameLayout(i[C],s)),C==="map"||C==="emissiveMap"?m[C].colorSpace=y.SRGBColorSpace:C==="envMap"||C==="lightMap"?m[C].colorSpace=y.LinearSRGBColorSpace:m[C].colorSpace=y.NoColorSpace})}const f=r.length,p=new ze(f,m);i.alphaMap&&(p.alphaTest=.5);const v=new y.BatchedMesh(f,6553600,6553600*2,p),x=new y.Matrix4;for(let w=0;w<f;w++){const L=r[w],C=v.addInstance(v.addGeometry(L.geometry)),P=C;if(u&&u[P]){let _;s?_=[u[P].startU,u[P].startV,u[P].endU,u[P].endV]:_=[u[P].startU,u[P].endV,u[P].endU,u[P].startV],p.setValue(w,"uvRange",..._)}let T=L.matrixWorld;L.isSkinnedMesh&&(T=x.multiplyMatrices(L.bindMatrixInverse,T)),v.setMatrixAt(C,T),Zr(p,C,g[w])}return v},Ft=(r,e=512,t=512)=>new Promise(s=>{if(r.find(o=>{const i=o.material;return!!(i&&Object.keys(i).find(d=>/(map|Map)$/.test(d)&&i[d]))}))setTimeout(()=>{const o=$t(r,e,t);s(o)},500);else{const o=$t(r,e,t);s(o)}}),Qr=E.forwardRef((r,e)=>{const{children:t,...s}=r;let n;const o=[];if(t.forEach(a=>{if(/geometry/i.test(a.type)){const{args:d,type:m,...u}=a.props,l=m!==void 0?`${m[0].toUpperCase()}${m.slice(1)}Geometry`:`${a.type[0].toUpperCase()}${a.type.slice(1)}`,c=d!==void 0?d:[],h=new y[l](...c);W(h,u),o.push(h)}else if(/primitive/.test(a.type)){const{object:d,...m}=a.props;if(d!=null&&d.isBufferGeometry){const u=d;u&&(W(u,m),o.push(u))}d!=null&&d.isMaterial&&(n=d)}else/material/i.test(a.type)&&(n=a)}),o.length===0)return null;const i=o.length===1?o[0]:pr.mergeGeometries(o,!1);return E.createElement("mesh",{ref:e,...s},E.createElement("primitive",{object:i,attach:"geometry"}),n)}),es=E.forwardRef((r,e)=>{const{children:t,...s}=r;return e||(e=E.useRef(null)),E.useEffect(()=>{if(e.current){const n=e.current;n.visible=!1,Ft(n.children).then(o=>{const i=n.parent;i.remove(n),i.add(o),e.current=o})}},[t]),(t==null?void 0:t.length)>0?E.createElement("batchedMesh",{ref:e,...s},t):null});class jt extends y.Sprite{constructor(e="",t={}){const{textHeight:s=.5,textWidthScale:n=1,textColor:o="#ffffff",textAlign:i="center",textBaseline:a="middle",fontStyle:d="normal",fontVariant:m="normal",fontWeight:u="normal",fontSize:l="64px",fontFamily:c="Karla, sans-serif"}=t,h={string:e,height:s,widthScale:n,color:At(o),align:i,baseline:a},g={style:d,variant:m,weight:u,size:l,family:c};super(),this.isTextSprite=!0,this.type="TextSprite",this.text=h,this.font=g,this.ctx=this.updateText(e)}copy(e){return y.Sprite.prototype.copy.call(this,e),this.text=JSON.parse(JSON.stringify(e.text)),this.font=JSON.parse(JSON.stringify(e.font)),this.ctx.drawImage(e.ctx.canvas,0,0),this}clone(){return new this.constructor(this.text.string).copy(this)}updateText(e){const t=this.text,s=this.font;e!==void 0&&typeof e=="string"&&(t.string=e);const n=document.createElement("canvas");n.height=parseInt(s.size),n.width=n.height*t.string.length;const o=n.getContext("2d");o.font=s.style+" "+s.variant+" "+s.weight+" "+s.size+" "+s.family,o.textAlign=t.align,o.textBaseline=t.baseline,o.fillStyle="#"+t.color.getHexString(),o.fillText(t.string,n.width/2,n.height/2);const i=new y.CanvasTexture(o.canvas);this.material?(this.material.map=i,this.material.map.needsUpdate=!0):this.material=new y.SpriteMaterial({color:16777215,map:i});const a=t.height*t.string.length*t.widthScale;return this.scale.set(a,t.height,1),o}}const ts=E.forwardRef((r,e)=>{const{string:t="",height:s=.5,widthScale:n=1,color:o=16777215,align:i="center",baseline:a="middle",style:d="normal",variant:m="normal",weight:u="normal",size:l="64px",family:c="Karla, sans-serif",...h}=r,g=new jt(t,{textHeight:s,textWidthScale:n,textColor:o,textAlign:i,textBaseline:a,fontStyle:d,fontVariant:m,fontWeight:u,fontSize:l,fontFamily:c});return E.createElement("primitive",{ref:e,object:g,...h})}),ne=new y.Matrix4,It=new y.Matrix4,Vt=new y.Matrix4,rs=new y.Matrix4,Ce=[],zt=new y.Box3,le=new y.Sphere;let Nt=!1;class ss extends y.SkinnedMesh{constructor(e,t,s=1){super(e,t),this.isInstancedMesh=!0,this.isInstancedSkinnedMesh=!0,this.instanceMatrix=new y.InstancedBufferAttribute(new Float32Array(s*16),16),this.instanceColor=null,this.instanceBones=null,this.morphTexture=null,this.count=s,this.boundingBox=null,this.boundingSphere=null,this._mesh=null;const n=this.bind.bind(this);this.bind=function(o,i){n(o,i),this.skeleton.update=(a,d)=>{const m=this.skeleton.bones,u=this.skeleton.boneInverses,l=a||this.skeleton.boneMatrices,c=this.skeleton.boneTexture,h=d||0;for(let g=0,f=m.length;g<f;g++){const p=m[g]?m[g].matrixWorld:rs;Vt.multiplyMatrices(p,u[g]),Vt.toArray(l,16*(g+h*m.length))}c!==null&&(c.needsUpdate=!0)},this.skeleton.computeBoneTexture=this.skeleton.computeInstancedBoneTexture=()=>{this.skeleton.boneTexture=new y.DataTexture(this.instanceBones,this.skeleton.bones.length*4,this.count,y.RGBAFormat,y.FloatType),this.skeleton.boneTexture.needsUpdate=!0}},Nt||(Nt=!0,y.ShaderChunk.points_vert=y.ShaderChunk.points_vert.replace("#include <clipping_planes_pars_vertex>",`#include <clipping_planes_pars_vertex>
#include <skinning_pars_vertex>`),y.ShaderChunk.points_vert=y.ShaderChunk.points_vert.replace("#include <morphtarget_vertex>",`#include <skinbase_vertex>
#include <morphtarget_vertex>
#include <skinning_vertex>`),y.ShaderLib.points.vertexShader=y.ShaderChunk.points_vert,y.ShaderChunk.skinning_pars_vertex=`
        #ifdef USE_SKINNING

          uniform mat4 bindMatrix;
          uniform mat4 bindMatrixInverse;

          uniform highp sampler2D boneTexture;
          // uniform int boneTextureSize;

          mat4 getBoneMatrix( const in float i ) {

          #ifdef USE_INSTANCING
              
              int j = 4 * int(i);
              vec4 v1 = texelFetch(boneTexture, ivec2( j, gl_InstanceID ), 0);
              vec4 v2 = texelFetch(boneTexture, ivec2( j + 1, gl_InstanceID ), 0);
              vec4 v3 = texelFetch(boneTexture, ivec2( j + 2, gl_InstanceID ), 0);
              vec4 v4 = texelFetch(boneTexture, ivec2( j + 3, gl_InstanceID ), 0);
              
          #else

            // float j = i * 4.0;
            // float x = mod( j, float( boneTextureSize ) );
            // float y = floor( j / float( boneTextureSize ) );
            // float dx = 1.0 / float( boneTextureSize );
            // float dy = 1.0 / float( boneTextureSize );
            // y = dy * ( y + 0.5 );
            // vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
            // vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
            // vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
            // vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );

            int size = textureSize( boneTexture, 0 ).x;
            int j = int( i ) * 4;
            int x = j % size;
            int y = j / size;
            vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
            vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
            vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
            vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );

          #endif

            return mat4( v1, v2, v3, v4 );

          }

        #endif
      `)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new y.Box3),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let s=0;s<t;s++)this.getMatrixAt(s,ne),zt.copy(e.boundingBox).applyMatrix4(ne),this.boundingBox.union(zt)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new y.Sphere),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let s=0;s<t;s++)this.getMatrixAt(s,ne),le.copy(e.boundingSphere).applyMatrix4(ne),this.boundingSphere.union(le)}copy(e,t){return super.copy(e,t),e.isInstancedMesh&&(e.instanceMatrix&&(this.instanceMatrix=e.instanceMatrix.clone()),e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),e.morphTexture&&(this.morphTexture=e.morphTexture.clone()),this.count=e.count),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const s=t.morphTargetInfluences,n=this.morphTexture.source.data.data,o=s.length+1,i=e*o+1;for(let a=0;a<s.length;a++)s[a]=n[i+a]}raycast(e,t){const s=this.matrixWorld,n=this.count;this._mesh===null&&(this._mesh=new y.SkinnedMesh(this.geometry,this.material),this._mesh.copy(this));const o=this._mesh;if(o.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),le.copy(this.boundingSphere),le.applyMatrix4(s),e.ray.intersectsSphere(le)!==!1))for(let i=0;i<n;i++){this.getMatrixAt(i,ne),It.multiplyMatrices(s,ne),o.matrixWorld=It,o.raycast(e,Ce);for(let a=0,d=Ce.length;a<d;a++){const m=Ce[a];m.instanceId=i,m.object=this,t.push(m)}Ce.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new y.InstancedBufferAttribute(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const s=t.morphTargetInfluences,n=s.length+1;this.morphTexture===null&&(this.morphTexture=new y.DataTexture(new Float32Array(n*this.count),n,this.count,RedFormat,FloatType));const o=this.morphTexture.source.data.data;let i=0;for(let m=0;m<s.length;m++)i+=s[m];const a=this.geometry.morphTargetsRelative?1:1-i,d=n*e;o[d]=a,o.set(s,d+1)}setBonesAt(e,t){t=t||this.skeleton;const s=t.bones.length*16;this.instanceBones===null&&(this.instanceBones=new Float32Array(s*this.count)),t.update(this.instanceBones,e)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}Object.defineProperty(b,"LOD",{enumerable:!0,get:()=>B.LOD}),b.SkeletonUtils=wt,Object.defineProperty(b,"EffectComposer",{enumerable:!0,get:()=>Ee.EffectComposer}),Object.defineProperty(b,"RGBELoader",{enumerable:!0,get:()=>Pe.RGBELoader}),Object.defineProperty(b,"ArcballControls",{enumerable:!0,get:()=>et.ArcballControls}),Object.defineProperty(b,"DragControls",{enumerable:!0,get:()=>Ae.DragControls}),Object.defineProperty(b,"FirstPersonControls",{enumerable:!0,get:()=>Oe.FirstPersonControls}),Object.defineProperty(b,"FlyControls",{enumerable:!0,get:()=>tt.FlyControls}),Object.defineProperty(b,"MapControls",{enumerable:!0,get:()=>rt.MapControls}),Object.defineProperty(b,"OrbitControls",{enumerable:!0,get:()=>ke.OrbitControls}),Object.defineProperty(b,"PointerLockControls",{enumerable:!0,get:()=>N.PointerLockControls}),Object.defineProperty(b,"TrackballControls",{enumerable:!0,get:()=>_e.TrackballControls}),Object.defineProperty(b,"TransformControls",{enumerable:!0,get:()=>ie.TransformControls}),Object.defineProperty(b,"DotScreenShader",{enumerable:!0,get:()=>st.DotScreenShader}),Object.defineProperty(b,"RGBShiftShader",{enumerable:!0,get:()=>nt.RGBShiftShader}),Object.defineProperty(b,"FXAAShader",{enumerable:!0,get:()=>ot.FXAAShader}),Object.defineProperty(b,"RenderPass",{enumerable:!0,get:()=>de.RenderPass}),Object.defineProperty(b,"ShaderPass",{enumerable:!0,get:()=>it.ShaderPass}),Object.defineProperty(b,"GlitchPass",{enumerable:!0,get:()=>at.GlitchPass}),Object.defineProperty(b,"GTAOPass",{enumerable:!0,get:()=>ct.GTAOPass}),Object.defineProperty(b,"OutlinePass",{enumerable:!0,get:()=>De.OutlinePass}),Object.defineProperty(b,"UnrealBloomPass",{enumerable:!0,get:()=>lt.UnrealBloomPass}),Object.defineProperty(b,"OutputPass",{enumerable:!0,get:()=>Ge.OutputPass}),Object.defineProperty(b,"AnaglyphEffect",{enumerable:!0,get:()=>ue.AnaglyphEffect}),Object.defineProperty(b,"AsciiEffect",{enumerable:!0,get:()=>he.AsciiEffect}),Object.defineProperty(b,"OutlineEffect",{enumerable:!0,get:()=>fe.OutlineEffect}),Object.defineProperty(b,"ParallaxBarrierEffect",{enumerable:!0,get:()=>pe.ParallaxBarrierEffect}),Object.defineProperty(b,"PeppersGhostEffect",{enumerable:!0,get:()=>me.PeppersGhostEffect}),Object.defineProperty(b,"StereoEffect",{enumerable:!0,get:()=>ge.StereoEffect}),Object.defineProperty(b,"RoundedBoxGeometry",{enumerable:!0,get:()=>ye.RoundedBoxGeometry}),Object.defineProperty(b,"ConvexGeometry",{enumerable:!0,get:()=>ve.ConvexGeometry}),Object.defineProperty(b,"DecalGeometry",{enumerable:!0,get:()=>be.DecalGeometry}),Object.defineProperty(b,"ParametricGeometry",{enumerable:!0,get:()=>xe.ParametricGeometry}),Object.defineProperty(b,"TextGeometry",{enumerable:!0,get:()=>Be.TextGeometry}),Object.defineProperty(b,"FontLoader",{enumerable:!0,get:()=>ut.FontLoader}),Object.defineProperty(b,"NURBSCurve",{enumerable:!0,get:()=>Ue.NURBSCurve}),Object.defineProperty(b,"NURBSSurface",{enumerable:!0,get:()=>Re.NURBSSurface}),Object.defineProperty(b,"LightProbeGenerator",{enumerable:!0,get:()=>ht.LightProbeGenerator}),Object.defineProperty(b,"RectAreaLightHelper",{enumerable:!0,get:()=>ft.RectAreaLightHelper}),Object.defineProperty(b,"RectAreaLightUniformsLib",{enumerable:!0,get:()=>pt.RectAreaLightUniformsLib}),Object.defineProperty(b,"VertexNormalsHelper",{enumerable:!0,get:()=>mt.VertexNormalsHelper}),Object.defineProperty(b,"VertexTangentsHelper",{enumerable:!0,get:()=>gt.VertexTangentsHelper}),b.Animator=Fe,b.BatchedMaterial=St,b.BokehPass=je,b.ColladaExporter=_t,b.CustomMaterial=He,b.InstancedSkinnedMesh=ss,b.MATERIAL_TYPES=We,b.MTLExporter=kt,b.MergedMaterial=ze,b.MergedMesh=es,b.Mesh=Qr,b.TEXTURE_MAPS=Xe,b.THREE_Color=At,b.THREE_Vector3=Lr,b.THREE_Vector3s=se,b.Text=ts,b.TextSprite=jt,b.ThreeCanvas=Pr,b.loadAudios=Rt,b.loadTextures=Xr,b.mergeMeshes=Ft,b.setObject3D=W,b.useAnimate=Br,b.useExporter=jr,b.useFrame=kr,b.useKeyDown=_r,b.useKeyUp=Dr,b.useLoader=Jr,b.useRefCallback=Or,b.useRefEffect=Ar,b.useSearch=Gr,b.useSearchObject=Ye,b.useThree=q,Object.defineProperty(b,Symbol.toStringTag,{value:"Module"})});
